/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl ../include/magma_tally2_z.i
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma_tally2.h"
#include "magma_tally2_mangling.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
    #define magma_tally2_idevptr(ptr_) ((int*)               (ptr_))
    #define magma_tally2_zdevptr(ptr_) ((magma_tally2DoubleComplex*)(ptr_))
    #ifndef magma_tally2_cdevptr
    #define magma_tally2_cdevptr(ptr_) ((magma_tally2FloatComplex*) (ptr_))
    #endif
    #ifndef magma_tally2_ddevptr
    #define magma_tally2_ddevptr(ptr_) ((double*)            (ptr_))
    #endif
    #ifndef magma_tally2_sdevptr
    #define magma_tally2_sdevptr(ptr_) ((float*)             (ptr_))
    #endif
#else
    #define magma_tally2_idevptr(ptr_) ((int*)               (uintptr_t)(*(ptr_)))
    #define magma_tally2_zdevptr(ptr_) ((magma_tally2DoubleComplex*)(uintptr_t)(*(ptr_)))
    #ifndef magma_tally2_cdevptr
    #define magma_tally2_cdevptr(ptr_) ((magma_tally2FloatComplex*) (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_tally2_ddevptr
    #define magma_tally2_ddevptr(ptr_) ((double*)            (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_tally2_sdevptr
    #define magma_tally2_sdevptr(ptr_) ((float*)             (uintptr_t)(*(ptr_)))
    #endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define magma_tally2f_get_zpotrf_nb FORTRAN_NAME( magma_tally2f_get_zpotrf_nb, MAGMA_tally2F_GET_ZPOTRF_NB )
magma_tally2_int_t magma_tally2f_get_zpotrf_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zpotrf_nb( *m );
}

#define magma_tally2f_get_zgetrf_nb FORTRAN_NAME( magma_tally2f_get_zgetrf_nb, MAGMA_tally2F_GET_ZGETRF_NB )
magma_tally2_int_t magma_tally2f_get_zgetrf_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgetrf_nb( *m );
}

#define magma_tally2f_get_zgetri_nb FORTRAN_NAME( magma_tally2f_get_zgetri_nb, MAGMA_tally2F_GET_ZGETRI_NB )
magma_tally2_int_t magma_tally2f_get_zgetri_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgetri_nb( *m );
}

#define magma_tally2f_get_zgeqp3_nb FORTRAN_NAME( magma_tally2f_get_zgeqp3_nb, MAGMA_tally2F_GET_ZGEQP3_NB )
magma_tally2_int_t magma_tally2f_get_zgeqp3_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgeqp3_nb( *m );
}

#define magma_tally2f_get_zgeqrf_nb FORTRAN_NAME( magma_tally2f_get_zgeqrf_nb, MAGMA_tally2F_GET_ZGEQRF_NB )
magma_tally2_int_t magma_tally2f_get_zgeqrf_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgeqrf_nb( *m );
}

#define magma_tally2f_get_zgeqlf_nb FORTRAN_NAME( magma_tally2f_get_zgeqlf_nb, MAGMA_tally2F_GET_ZGEQLF_NB )
magma_tally2_int_t magma_tally2f_get_zgeqlf_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgeqlf_nb( *m );
}

#define magma_tally2f_get_zgehrd_nb FORTRAN_NAME( magma_tally2f_get_zgehrd_nb, MAGMA_tally2F_GET_ZGEHRD_NB )
magma_tally2_int_t magma_tally2f_get_zgehrd_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgehrd_nb( *m );
}

#define magma_tally2f_get_zhetrd_nb FORTRAN_NAME( magma_tally2f_get_zhetrd_nb, MAGMA_tally2F_GET_ZHETRD_NB )
magma_tally2_int_t magma_tally2f_get_zhetrd_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zhetrd_nb( *m );
}

#define magma_tally2f_get_zhetrf_nb FORTRAN_NAME( magma_tally2f_get_zhetrf_nb, MAGMA_tally2F_GET_ZHETRF_NB )
magma_tally2_int_t magma_tally2f_get_zhetrf_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zhetrf_nb( *m );
}

#define magma_tally2f_get_zhetrf_nopiv_tally2_nb FORTRAN_NAME( magma_tally2f_get_zhetrf_nopiv_tally2_nb, MAGMA_tally2F_GET_ZHETRF_NOPIV_NB )
magma_tally2_int_t magma_tally2f_get_zhetrf_nopiv_tally2_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zhetrf_nopiv_tally2_nb( *m );
}

#define magma_tally2f_get_zgelqf_nb FORTRAN_NAME( magma_tally2f_get_zgelqf_nb, MAGMA_tally2F_GET_ZGELQF_NB )
magma_tally2_int_t magma_tally2f_get_zgelqf_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgelqf_nb( *m );
}

#define magma_tally2f_get_zgebrd_nb FORTRAN_NAME( magma_tally2f_get_zgebrd_nb, MAGMA_tally2F_GET_ZGEBRD_NB )
magma_tally2_int_t magma_tally2f_get_zgebrd_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgebrd_nb( *m );
}

#define magma_tally2f_get_zhegst_nb FORTRAN_NAME( magma_tally2f_get_zhegst_nb, MAGMA_tally2F_GET_ZHEGST_NB )
magma_tally2_int_t magma_tally2f_get_zhegst_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zhegst_nb( *m );
}

#define magma_tally2f_get_zgesvd_nb FORTRAN_NAME( magma_tally2f_get_zgesvd_nb, MAGMA_tally2F_GET_ZGESVD_NB )
magma_tally2_int_t magma_tally2f_get_zgesvd_nb( magma_tally2_int_t *m )
{
    return magma_tally2_get_zgesvd_nb( *m );
}

#define magma_tally2f_get_zhegst_nb_m FORTRAN_NAME( magma_tally2f_get_zhegst_nb_m, MAGMA_tally2F_GET_ZHEGST_NB_M )
magma_tally2_int_t magma_tally2f_get_zhegst_nb_m( magma_tally2_int_t *m )
{
    return magma_tally2_get_zhegst_nb_m( *m );
}

#define magma_tally2f_get_zbulge_nb FORTRAN_NAME( magma_tally2f_get_zbulge_nb, MAGMA_tally2F_GET_ZBULGE_NB )
void magma_tally2f_get_zbulge_nb(
    magma_tally2_int_t *m, magma_tally2_int_t *nbthreads )
{
    magma_tally2_get_zbulge_nb(
        *m, *nbthreads );
}

#define magma_tally2f_zbulge_get_Vblksiz FORTRAN_NAME( magma_tally2f_zbulge_get_Vblksiz, MAGMA_tally2F_ZBULGE_GET_VBLKSIZ )
void magma_tally2f_zbulge_get_Vblksiz(
    magma_tally2_int_t *m, magma_tally2_int_t *nb, magma_tally2_int_t *nbthreads )
{
    magma_tally2_zbulge_get_Vblksiz(
        *m, *nb, *nbthreads );
}

#define magma_tally2f_get_zbulge_gcperf FORTRAN_NAME( magma_tally2f_get_zbulge_gcperf, MAGMA_tally2F_GET_ZBULGE_GCPERF )
void magma_tally2f_get_zbulge_gcperf(
     )
{
    magma_tally2_get_zbulge_gcperf(
         );
}

#define magma_tally2f_zgebrd FORTRAN_NAME( magma_tally2f_zgebrd, MAGMA_tally2F_ZGEBRD )
void magma_tally2f_zgebrd(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *d,
    double *e,
    magma_tally2DoubleComplex *tauq,
    magma_tally2DoubleComplex *taup,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magma_tally2f_zgeev FORTRAN_NAME( magma_tally2f_zgeev, MAGMA_tally2F_ZGEEV )
void magma_tally2f_zgeev(
    const char* jobvl, const char* jobvr, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *w,
    magma_tally2DoubleComplex *VL, magma_tally2_int_t *ldvl,
    magma_tally2DoubleComplex *VR, magma_tally2_int_t *ldvr,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeev(
        magma_tally2_vec_const(*jobvl), magma_tally2_vec_const(*jobvr), *n,
        A, *lda,
        w,
        VL, *ldvl,
        VR, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally2f_zgehrd FORTRAN_NAME( magma_tally2f_zgehrd, MAGMA_tally2F_ZGEHRD )
void magma_tally2f_zgehrd(
    magma_tally2_int_t *n, magma_tally2_int_t *ilo, magma_tally2_int_t *ihi,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    devptr_t *dT,
    magma_tally2_int_t *info )
{
    magma_tally2_zgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        magma_tally2_zdevptr(dT),
        info );
}

#define magma_tally2f_zgehrd2 FORTRAN_NAME( magma_tally2f_zgehrd2, MAGMA_tally2F_ZGEHRD2 )
void magma_tally2f_zgehrd2(
    magma_tally2_int_t *n, magma_tally2_int_t *ilo, magma_tally2_int_t *ihi,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgelqf FORTRAN_NAME( magma_tally2f_zgelqf, MAGMA_tally2F_ZGELQF )
void magma_tally2f_zgelqf(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgeqlf FORTRAN_NAME( magma_tally2f_zgeqlf, MAGMA_tally2F_ZGEQLF )
void magma_tally2f_zgeqlf(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgeqp3 FORTRAN_NAME( magma_tally2f_zgeqp3, MAGMA_tally2F_ZGEQP3 )
void magma_tally2f_zgeqp3(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *jpvt,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqp3(
        *m, *n,
        A, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally2f_zgeqrf FORTRAN_NAME( magma_tally2f_zgeqrf, MAGMA_tally2F_ZGEQRF )
void magma_tally2f_zgeqrf(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgeqrf_ooc FORTRAN_NAME( magma_tally2f_zgeqrf_ooc, MAGMA_tally2F_ZGEQRF_OOC )
void magma_tally2f_zgeqrf_ooc(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgeqrf4 FORTRAN_NAME( magma_tally2f_zgeqrf4, MAGMA_tally2F_ZGEQRF4 )
void magma_tally2f_zgeqrf4(
    magma_tally2_int_t *ngpu, magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrf4(
        *ngpu, *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgesdd FORTRAN_NAME( magma_tally2f_zgesdd, MAGMA_tally2F_ZGESDD )
void magma_tally2f_zgesdd(
    const char* jobz, magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *s,
    magma_tally2DoubleComplex *U, magma_tally2_int_t *ldu,
    magma_tally2DoubleComplex *VT, magma_tally2_int_t *ldvt,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *iwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgesdd(
        magma_tally2_vec_const(*jobz), *m, *n,
        A, *lda,
        s,
        U, *ldu,
        VT, *ldvt,
        work, *lwork,
        rwork,
        iwork,
        info );
}

#define magma_tally2f_zgesv FORTRAN_NAME( magma_tally2f_zgesv, MAGMA_tally2F_ZGESV )
void magma_tally2f_zgesv(
    magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *ipiv,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    magma_tally2_int_t *info )
{
    magma_tally2_zgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magma_tally2f_zgesv_rbt FORTRAN_NAME( magma_tally2f_zgesv_rbt, MAGMA_tally2F_ZGESV_RBT )
void magma_tally2f_zgesv_rbt(
    const char* ref, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    magma_tally2_int_t *info )
{
    magma_tally2_zgesv_rbt(
        magma_tally2_bool_const(*ref), *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally2f_zgesvd FORTRAN_NAME( magma_tally2f_zgesvd, MAGMA_tally2F_ZGESVD )
void magma_tally2f_zgesvd(
    const char* jobu, const char* jobvt, magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *s,
    magma_tally2DoubleComplex *U, magma_tally2_int_t *ldu,
    magma_tally2DoubleComplex *VT, magma_tally2_int_t *ldvt,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgesvd(
        magma_tally2_vec_const(*jobu), magma_tally2_vec_const(*jobvt), *m, *n,
        A, *lda,
        s,
        U, *ldu,
        VT, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally2f_zgetf2_nopiv FORTRAN_NAME( magma_tally2f_zgetf2_nopiv, MAGMA_tally2F_ZGETF2_NOPIV )
void magma_tally2f_zgetf2_nopiv(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetf2_nopiv(
        *m, *n,
        A, *lda,
        info );
}

#define magma_tally2f_zgetrf FORTRAN_NAME( magma_tally2f_zgetrf, MAGMA_tally2F_ZGETRF )
void magma_tally2f_zgetrf(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally2f_zgetrf_nopiv FORTRAN_NAME( magma_tally2f_zgetrf_nopiv, MAGMA_tally2F_ZGETRF_NOPIV )
void magma_tally2f_zgetrf_nopiv(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrf_nopiv(
        *m, *n,
        A, *lda,
        info );
}

#define magma_tally2f_zgetrf_piv FORTRAN_NAME( magma_tally2f_zgetrf_piv, MAGMA_tally2F_ZGETRF_PIV )
void magma_tally2f_zgetrf_piv(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *NB,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrf_piv(
        *m, *n, *NB,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally2f_zheevd FORTRAN_NAME( magma_tally2f_zheevd, MAGMA_tally2F_ZHEEVD )
void magma_tally2f_zheevd(
    const char* jobz, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevd(
        magma_tally2_vec_const(*jobz), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevdx FORTRAN_NAME( magma_tally2f_zheevdx, MAGMA_tally2F_ZHEEVDX )
void magma_tally2f_zheevdx(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevdx(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevdx_2stage FORTRAN_NAME( magma_tally2f_zheevdx_2stage, MAGMA_tally2F_ZHEEVDX_2STAGE )
void magma_tally2f_zheevdx_2stage(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevdx_2stage(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevr FORTRAN_NAME( magma_tally2f_zheevr, MAGMA_tally2F_ZHEEVR )
void magma_tally2f_zheevr(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu, double *abstol,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *Z, magma_tally2_int_t *ldz,
    magma_tally2_int_t *isuppz,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevr(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevx FORTRAN_NAME( magma_tally2f_zheevx, MAGMA_tally2F_ZHEEVX )
void magma_tally2f_zheevx(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu, double *abstol,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *Z, magma_tally2_int_t *ldz,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *iwork,
    magma_tally2_int_t *ifail,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevx(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_tally2f_zhegst FORTRAN_NAME( magma_tally2f_zhegst, MAGMA_tally2F_ZHEGST )
void magma_tally2f_zhegst(
    magma_tally2_int_t *itype, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegst(
        *itype, magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally2f_zhegvd FORTRAN_NAME( magma_tally2f_zhegvd, MAGMA_tally2F_ZHEGVD )
void magma_tally2f_zhegvd(
    magma_tally2_int_t *itype, const char* jobz, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvd(
        *itype, magma_tally2_vec_const(*jobz), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegvdx FORTRAN_NAME( magma_tally2f_zhegvdx, MAGMA_tally2F_ZHEGVDX )
void magma_tally2f_zhegvdx(
    magma_tally2_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvdx(
        *itype, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegvdx_2stage FORTRAN_NAME( magma_tally2f_zhegvdx_2stage, MAGMA_tally2F_ZHEGVDX_2STAGE )
void magma_tally2f_zhegvdx_2stage(
    magma_tally2_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvdx_2stage(
        *itype, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegvr FORTRAN_NAME( magma_tally2f_zhegvr, MAGMA_tally2F_ZHEGVR )
void magma_tally2f_zhegvr(
    magma_tally2_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu, double *abstol,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *Z, magma_tally2_int_t *ldz,
    magma_tally2_int_t *isuppz,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvr(
        *itype, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegvx FORTRAN_NAME( magma_tally2f_zhegvx, MAGMA_tally2F_ZHEGVX )
void magma_tally2f_zhegvx(
    magma_tally2_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu, double *abstol,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *Z, magma_tally2_int_t *ldz,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *iwork,
    magma_tally2_int_t *ifail,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvx(
        *itype, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_tally2f_zhesv FORTRAN_NAME( magma_tally2f_zhesv, MAGMA_tally2F_ZHESV )
void magma_tally2f_zhesv(
    const char* uplo, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *ipiv,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    magma_tally2_int_t *info )
{
    magma_tally2_zhesv(
        magma_tally2_uplo_const(*uplo), *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magma_tally2f_zhetrd FORTRAN_NAME( magma_tally2f_zhetrd, MAGMA_tally2F_ZHETRD )
void magma_tally2f_zhetrd(
    const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *d,
    double *e,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrd(
        magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zhetrf FORTRAN_NAME( magma_tally2f_zhetrf, MAGMA_tally2F_ZHETRF )
void magma_tally2f_zhetrf(
    const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrf(
        magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally2f_zhetrf_nopiv_tally2 FORTRAN_NAME( magma_tally2f_zhetrf_nopiv_tally2, MAGMA_tally2F_ZHETRF_NOPIV )
void magma_tally2f_zhetrf_nopiv_tally2(
    const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *a, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrf_nopiv_tally2(
        magma_tally2_uplo_const(*uplo), *n,
        a, *lda,
        info );
}

#define magma_tally2f_zhetrd_hb2st FORTRAN_NAME( magma_tally2f_zhetrd_hb2st, MAGMA_tally2F_ZHETRD_HB2ST )
void magma_tally2f_zhetrd_hb2st(
    const char* uplo, magma_tally2_int_t *n, magma_tally2_int_t *nb, magma_tally2_int_t *Vblksiz,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *d,
    double *e,
    magma_tally2DoubleComplex *V, magma_tally2_int_t *ldv,
    magma_tally2DoubleComplex *TAU, magma_tally2_int_t *compT,
    magma_tally2DoubleComplex *T, magma_tally2_int_t *ldt )
{
    magma_tally2_zhetrd_hb2st(
        magma_tally2_uplo_const(*uplo), *n, *nb, *Vblksiz,
        A, *lda,
        d,
        e,
        V, *ldv,
        TAU, *compT,
        T, *ldt );
}

#define magma_tally2f_zhetrd_he2hb FORTRAN_NAME( magma_tally2f_zhetrd_he2hb, MAGMA_tally2F_ZHETRD_HE2HB )
void magma_tally2f_zhetrd_he2hb(
    const char* uplo, magma_tally2_int_t *n, magma_tally2_int_t *nb,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    devptr_t *dT,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrd_he2hb(
        magma_tally2_uplo_const(*uplo), *n, *nb,
        A, *lda,
        tau,
        work, *lwork,
        magma_tally2_zdevptr(dT),
        info );
}

#define magma_tally2f_zlatrsd FORTRAN_NAME( magma_tally2f_zlatrsd, MAGMA_tally2F_ZLATRSD )
void magma_tally2f_zlatrsd(
    const char* uplo, const char* trans, const char* diag, const char* normin, magma_tally2_int_t *n,
    const magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, magma_tally2DoubleComplex *lambda,
    magma_tally2DoubleComplex *x,
    double *scale,
    double *cnorm,
    magma_tally2_int_t *info )
{
    magma_tally2_zlatrsd(
        magma_tally2_uplo_const(*uplo), magma_tally2_trans_const(*trans), magma_tally2_diag_const(*diag), magma_tally2_bool_const(*normin), *n,
        A, *lda, *lambda,
        x,
        scale,
        cnorm,
        info );
}

#define magma_tally2f_zlauum FORTRAN_NAME( magma_tally2f_zlauum, MAGMA_tally2F_ZLAUUM )
void magma_tally2f_zlauum(
    const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zlauum(
        magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally2f_zposv FORTRAN_NAME( magma_tally2f_zposv, MAGMA_tally2F_ZPOSV )
void magma_tally2f_zposv(
    const char* uplo, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    magma_tally2_int_t *info )
{
    magma_tally2_zposv(
        magma_tally2_uplo_const(*uplo), *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally2f_zpotrf FORTRAN_NAME( magma_tally2f_zpotrf, MAGMA_tally2F_ZPOTRF )
void magma_tally2f_zpotrf(
    const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotrf(
        magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally2f_zpotri FORTRAN_NAME( magma_tally2f_zpotri, MAGMA_tally2F_ZPOTRI )
void magma_tally2f_zpotri(
    const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotri(
        magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally2f_zstedx FORTRAN_NAME( magma_tally2f_zstedx, MAGMA_tally2F_ZSTEDX )
void magma_tally2f_zstedx(
    const char* range, magma_tally2_int_t *n, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    double *d,
    double *e,
    magma_tally2DoubleComplex *Z, magma_tally2_int_t *ldz,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    devptr_t *dwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zstedx(
        magma_tally2_range_const(*range), *n, *vl, *vu, *il, *iu,
        d,
        e,
        Z, *ldz,
        rwork, *lrwork,
        iwork, *liwork,
        magma_tally2_ddevptr(dwork),
        info );
}

#define magma_tally2f_ztrevc3 FORTRAN_NAME( magma_tally2f_ztrevc3, MAGMA_tally2F_ZTREVC3 )
void magma_tally2f_ztrevc3(
    const char* side, const char* howmany,
    magma_tally2_int_t *select, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *T, magma_tally2_int_t *ldt,
    magma_tally2DoubleComplex *VL, magma_tally2_int_t *ldvl,
    magma_tally2DoubleComplex *VR, magma_tally2_int_t *ldvr, magma_tally2_int_t *mm,
    magma_tally2_int_t *mout,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_ztrevc3(
        magma_tally2_side_const(*side), magma_tally2_vec_const(*howmany),
        select, *n,
        T, *ldt,
        VL, *ldvl,
        VR, *ldvr, *mm,
        mout,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally2f_ztrevc3_mt FORTRAN_NAME( magma_tally2f_ztrevc3_mt, MAGMA_tally2F_ZTREVC3_MT )
void magma_tally2f_ztrevc3_mt(
    const char* side, const char* howmany,
    magma_tally2_int_t *select, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *T, magma_tally2_int_t *ldt,
    magma_tally2DoubleComplex *VL, magma_tally2_int_t *ldvl,
    magma_tally2DoubleComplex *VR, magma_tally2_int_t *ldvr, magma_tally2_int_t *mm,
    magma_tally2_int_t *mout,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_ztrevc3_mt(
        magma_tally2_side_const(*side), magma_tally2_vec_const(*howmany),
        select, *n,
        T, *ldt,
        VL, *ldvl,
        VR, *ldvr, *mm,
        mout,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally2f_ztrtri FORTRAN_NAME( magma_tally2f_ztrtri, MAGMA_tally2F_ZTRTRI )
void magma_tally2f_ztrtri(
    const char* uplo, const char* diag, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_ztrtri(
        magma_tally2_uplo_const(*uplo), magma_tally2_diag_const(*diag), *n,
        A, *lda,
        info );
}

#define magma_tally2f_zunghr FORTRAN_NAME( magma_tally2f_zunghr, MAGMA_tally2F_ZUNGHR )
void magma_tally2f_zunghr(
    magma_tally2_int_t *n, magma_tally2_int_t *ilo, magma_tally2_int_t *ihi,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT, magma_tally2_int_t *nb,
    magma_tally2_int_t *info )
{
    magma_tally2_zunghr(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        magma_tally2_zdevptr(dT), *nb,
        info );
}

#define magma_tally2f_zungqr FORTRAN_NAME( magma_tally2f_zungqr, MAGMA_tally2F_ZUNGQR )
void magma_tally2f_zungqr(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT, magma_tally2_int_t *nb,
    magma_tally2_int_t *info )
{
    magma_tally2_zungqr(
        *m, *n, *k,
        A, *lda,
        tau,
        magma_tally2_zdevptr(dT), *nb,
        info );
}

#define magma_tally2f_zungqr2 FORTRAN_NAME( magma_tally2f_zungqr2, MAGMA_tally2F_ZUNGQR2 )
void magma_tally2f_zungqr2(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2_int_t *info )
{
    magma_tally2_zungqr2(
        *m, *n, *k,
        A, *lda,
        tau,
        info );
}

#define magma_tally2f_zunmbr FORTRAN_NAME( magma_tally2f_zunmbr, MAGMA_tally2F_ZUNMBR )
void magma_tally2f_zunmbr(
    const char* vect, const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmbr(
        magma_tally2_vect_const(*vect), magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zunmlq FORTRAN_NAME( magma_tally2f_zunmlq, MAGMA_tally2F_ZUNMLQ )
void magma_tally2f_zunmlq(
    const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmlq(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zunmql FORTRAN_NAME( magma_tally2f_zunmql, MAGMA_tally2F_ZUNMQL )
void magma_tally2f_zunmql(
    const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmql(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zunmqr FORTRAN_NAME( magma_tally2f_zunmqr, MAGMA_tally2F_ZUNMQR )
void magma_tally2f_zunmqr(
    const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmqr(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zunmtr FORTRAN_NAME( magma_tally2f_zunmtr, MAGMA_tally2F_ZUNMTR )
void magma_tally2f_zunmtr(
    const char* side, const char* uplo, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmtr(
        magma_tally2_side_const(*side), magma_tally2_uplo_const(*uplo), magma_tally2_trans_const(*trans), *m, *n,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zgeev_m FORTRAN_NAME( magma_tally2f_zgeev_m, MAGMA_tally2F_ZGEEV_M )
void magma_tally2f_zgeev_m(
    const char* jobvl, const char* jobvr, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *w,
    magma_tally2DoubleComplex *VL, magma_tally2_int_t *ldvl,
    magma_tally2DoubleComplex *VR, magma_tally2_int_t *ldvr,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeev_m(
        magma_tally2_vec_const(*jobvl), magma_tally2_vec_const(*jobvr), *n,
        A, *lda,
        w,
        VL, *ldvl,
        VR, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally2f_zgehrd_m FORTRAN_NAME( magma_tally2f_zgehrd_m, MAGMA_tally2F_ZGEHRD_M )
void magma_tally2f_zgehrd_m(
    magma_tally2_int_t *n, magma_tally2_int_t *ilo, magma_tally2_int_t *ihi,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2DoubleComplex *T,
    magma_tally2_int_t *info )
{
    magma_tally2_zgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magma_tally2f_zgetrf_m FORTRAN_NAME( magma_tally2f_zgetrf_m, MAGMA_tally2F_ZGETRF_M )
void magma_tally2f_zgetrf_m(
    magma_tally2_int_t *ngpu, magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrf_m(
        *ngpu, *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally2f_zheevd_m FORTRAN_NAME( magma_tally2f_zheevd_m, MAGMA_tally2F_ZHEEVD_M )
void magma_tally2f_zheevd_m(
    magma_tally2_int_t *ngpu, const char* jobz, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevd_m(
        *ngpu, magma_tally2_vec_const(*jobz), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevdx_2stage_m FORTRAN_NAME( magma_tally2f_zheevdx_2stage_m, MAGMA_tally2F_ZHEEVDX_2STAGE_M )
void magma_tally2f_zheevdx_2stage_m(
    magma_tally2_int_t *ngpu, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevdx_2stage_m(
        *ngpu, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevdx_m FORTRAN_NAME( magma_tally2f_zheevdx_m, MAGMA_tally2F_ZHEEVDX_M )
void magma_tally2f_zheevdx_m(
    magma_tally2_int_t *ngpu, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevdx_m(
        *ngpu, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegst_m FORTRAN_NAME( magma_tally2f_zhegst_m, MAGMA_tally2F_ZHEGST_M )
void magma_tally2f_zhegst_m(
    magma_tally2_int_t *ngpu, magma_tally2_int_t *itype, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegst_m(
        *ngpu, *itype, magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally2f_zhegvd_m FORTRAN_NAME( magma_tally2f_zhegvd_m, MAGMA_tally2F_ZHEGVD_M )
void magma_tally2f_zhegvd_m(
    magma_tally2_int_t *ngpu, magma_tally2_int_t *itype, const char* jobz, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvd_m(
        *ngpu, *itype, magma_tally2_vec_const(*jobz), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegvdx_2stage_m FORTRAN_NAME( magma_tally2f_zhegvdx_2stage_m, MAGMA_tally2F_ZHEGVDX_2STAGE_M )
void magma_tally2f_zhegvdx_2stage_m(
    magma_tally2_int_t *ngpu, magma_tally2_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvdx_2stage_m(
        *ngpu, *itype, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zhegvdx_m FORTRAN_NAME( magma_tally2f_zhegvdx_m, MAGMA_tally2F_ZHEGVDX_M )
void magma_tally2f_zhegvdx_m(
    magma_tally2_int_t *ngpu, magma_tally2_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegvdx_m(
        *ngpu, *itype, magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zpotrf_m FORTRAN_NAME( magma_tally2f_zpotrf_m, MAGMA_tally2F_ZPOTRF_M )
void magma_tally2f_zpotrf_m(
    magma_tally2_int_t *ngpu, const char* uplo, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotrf_m(
        *ngpu, magma_tally2_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally2f_zstedx_m FORTRAN_NAME( magma_tally2f_zstedx_m, MAGMA_tally2F_ZSTEDX_M )
void magma_tally2f_zstedx_m(
    magma_tally2_int_t *ngpu, const char* range, magma_tally2_int_t *n, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    double *d,
    double *e,
    magma_tally2DoubleComplex *Z, magma_tally2_int_t *ldz,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zstedx_m(
        *ngpu, magma_tally2_range_const(*range), *n, *vl, *vu, *il, *iu,
        d,
        e,
        Z, *ldz,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_ztrsm_m FORTRAN_NAME( magma_tally2f_ztrsm_m, MAGMA_tally2F_ZTRSM_M )
void magma_tally2f_ztrsm_m(
    magma_tally2_int_t *ngpu, const char* side, const char* uplo, const char* transa, const char* diag, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2DoubleComplex *alpha,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *B, magma_tally2_int_t *ldb )
{
    magma_tally2_ztrsm_m(
        *ngpu, magma_tally2_side_const(*side), magma_tally2_uplo_const(*uplo), magma_tally2_trans_const(*transa), magma_tally2_diag_const(*diag), *m, *n, *alpha,
        A, *lda,
        B, *ldb );
}

#define magma_tally2f_zunghr_m FORTRAN_NAME( magma_tally2f_zunghr_m, MAGMA_tally2F_ZUNGHR_M )
void magma_tally2f_zunghr_m(
    magma_tally2_int_t *n, magma_tally2_int_t *ilo, magma_tally2_int_t *ihi,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *T, magma_tally2_int_t *nb,
    magma_tally2_int_t *info )
{
    magma_tally2_zunghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magma_tally2f_zungqr_m FORTRAN_NAME( magma_tally2f_zungqr_m, MAGMA_tally2F_ZUNGQR_M )
void magma_tally2f_zungqr_m(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *T, magma_tally2_int_t *nb,
    magma_tally2_int_t *info )
{
    magma_tally2_zungqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magma_tally2f_zunmqr_m FORTRAN_NAME( magma_tally2f_zunmqr_m, MAGMA_tally2F_ZUNMQR_M )
void magma_tally2f_zunmqr_m(
    magma_tally2_int_t *ngpu, const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmqr_m(
        *ngpu, magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zunmtr_m FORTRAN_NAME( magma_tally2f_zunmtr_m, MAGMA_tally2F_ZUNMTR_M )
void magma_tally2f_zunmtr_m(
    magma_tally2_int_t *ngpu, const char* side, const char* uplo, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n,
    magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *C, magma_tally2_int_t *ldc,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmtr_m(
        *ngpu, magma_tally2_side_const(*side), magma_tally2_uplo_const(*uplo), magma_tally2_trans_const(*trans), *m, *n,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally2f_zgegqr_gpu FORTRAN_NAME( magma_tally2f_zgegqr_gpu, MAGMA_tally2F_ZGEGQR_GPU )
void magma_tally2f_zgegqr_gpu(
    magma_tally2_int_t *ikind, magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dwork,
    magma_tally2DoubleComplex *work,
    magma_tally2_int_t *info )
{
    magma_tally2_zgegqr_gpu(
        *ikind, *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dwork),
        work,
        info );
}

#define magma_tally2f_zgelqf_gpu FORTRAN_NAME( magma_tally2f_zgelqf_gpu, MAGMA_tally2F_ZGELQF_GPU )
void magma_tally2f_zgelqf_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgelqf_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally2f_zgels_gpu FORTRAN_NAME( magma_tally2f_zgels_gpu, MAGMA_tally2F_ZGELS_GPU )
void magma_tally2f_zgels_gpu(
    const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2DoubleComplex *hwork, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgels_gpu(
        magma_tally2_trans_const(*trans), *m, *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally2f_zgels3_gpu FORTRAN_NAME( magma_tally2f_zgels3_gpu, MAGMA_tally2F_ZGELS3_GPU )
void magma_tally2f_zgels3_gpu(
    const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2DoubleComplex *hwork, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgels3_gpu(
        magma_tally2_trans_const(*trans), *m, *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally2f_zgeqp3_gpu FORTRAN_NAME( magma_tally2f_zgeqp3_gpu, MAGMA_tally2F_ZGEQP3_GPU )
void magma_tally2f_zgeqp3_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *jpvt,
    magma_tally2DoubleComplex *tau,
    devptr_t *dwork, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqp3_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        jpvt,
        tau,
        magma_tally2_zdevptr(dwork), *lwork,
        rwork,
        info );
}

#define magma_tally2f_zgeqr2x_gpu FORTRAN_NAME( magma_tally2f_zgeqr2x_gpu, MAGMA_tally2F_ZGEQR2X_GPU )
void magma_tally2f_zgeqr2x_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqr2x_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dtau),
        magma_tally2_zdevptr(dT),
        magma_tally2_zdevptr(ddA),
        magma_tally2_ddevptr(dwork),
        info );
}

#define magma_tally2f_zgeqr2x2_gpu FORTRAN_NAME( magma_tally2f_zgeqr2x2_gpu, MAGMA_tally2F_ZGEQR2X2_GPU )
void magma_tally2f_zgeqr2x2_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqr2x2_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dtau),
        magma_tally2_zdevptr(dT),
        magma_tally2_zdevptr(ddA),
        magma_tally2_ddevptr(dwork),
        info );
}

#define magma_tally2f_zgeqr2x3_gpu FORTRAN_NAME( magma_tally2f_zgeqr2x3_gpu, MAGMA_tally2F_ZGEQR2X3_GPU )
void magma_tally2f_zgeqr2x3_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqr2x3_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dtau),
        magma_tally2_zdevptr(dT),
        magma_tally2_zdevptr(ddA),
        magma_tally2_ddevptr(dwork),
        info );
}

#define magma_tally2f_zgeqr2x4_gpu FORTRAN_NAME( magma_tally2f_zgeqr2x4_gpu, MAGMA_tally2F_ZGEQR2X4_GPU )
void magma_tally2f_zgeqr2x4_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork, magma_tally2_queue_t *queue,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqr2x4_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dtau),
        magma_tally2_zdevptr(dT),
        magma_tally2_zdevptr(ddA),
        magma_tally2_ddevptr(dwork), *queue,
        info );
}

#define magma_tally2f_zgeqrf_gpu FORTRAN_NAME( magma_tally2f_zgeqrf_gpu, MAGMA_tally2F_ZGEQRF_GPU )
void magma_tally2f_zgeqrf_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrf_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dT),
        info );
}

#define magma_tally2f_zgeqrf2_gpu FORTRAN_NAME( magma_tally2f_zgeqrf2_gpu, MAGMA_tally2F_ZGEQRF2_GPU )
void magma_tally2f_zgeqrf2_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrf2_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        info );
}

#define magma_tally2f_zgeqrf3_gpu FORTRAN_NAME( magma_tally2f_zgeqrf3_gpu, MAGMA_tally2F_ZGEQRF3_GPU )
void magma_tally2f_zgeqrf3_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrf3_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dT),
        info );
}

#define magma_tally2f_zgeqrs_gpu FORTRAN_NAME( magma_tally2f_zgeqrs_gpu, MAGMA_tally2F_ZGEQRS_GPU )
void magma_tally2f_zgeqrs_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2DoubleComplex *hwork, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrs_gpu(
        *m, *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dT),
        magma_tally2_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally2f_zgeqrs3_gpu FORTRAN_NAME( magma_tally2f_zgeqrs3_gpu, MAGMA_tally2F_ZGEQRS3_GPU )
void magma_tally2f_zgeqrs3_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2DoubleComplex *hwork, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgeqrs3_gpu(
        *m, *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dT),
        magma_tally2_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally2f_zgerbt_gpu FORTRAN_NAME( magma_tally2f_zgerbt_gpu, MAGMA_tally2F_ZGERBT_GPU )
void magma_tally2f_zgerbt_gpu(
    const char* gen, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2DoubleComplex *U,
    magma_tally2DoubleComplex *V,
    magma_tally2_int_t *info )
{
    magma_tally2_zgerbt_gpu(
        magma_tally2_bool_const(*gen), *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        U,
        V,
        info );
}

#define magma_tally2f_zgessm_gpu FORTRAN_NAME( magma_tally2f_zgessm_gpu, MAGMA_tally2F_ZGESSM_GPU )
void magma_tally2f_zgessm_gpu(
    const char* order, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k, magma_tally2_int_t *ib,
    magma_tally2_int_t *ipiv,
    devptr_t *dL1, magma_tally2_int_t *lddl1,
    devptr_t *dL, magma_tally2_int_t *lddl,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zgessm_gpu(
        magma_tally2_order_const(*order), *m, *n, *k, *ib,
        ipiv,
        magma_tally2_zdevptr(dL1), *lddl1,
        magma_tally2_zdevptr(dL), *lddl,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zgesv_gpu FORTRAN_NAME( magma_tally2f_zgesv_gpu, MAGMA_tally2F_ZGESV_GPU )
void magma_tally2f_zgesv_gpu(
    magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *ipiv,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zgesv_gpu(
        *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        ipiv,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zgesv_nopiv_gpu FORTRAN_NAME( magma_tally2f_zgesv_nopiv_gpu, MAGMA_tally2F_ZGESV_NOPIV_GPU )
void magma_tally2f_zgesv_nopiv_gpu(
    magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zgesv_nopiv_gpu(
        *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zgetf2_gpu FORTRAN_NAME( magma_tally2f_zgetf2_gpu, MAGMA_tally2F_ZGETF2_GPU )
void magma_tally2f_zgetf2_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetf2_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        ipiv,
        info );
}

#define magma_tally2f_zgetrf_gpu FORTRAN_NAME( magma_tally2f_zgetrf_gpu, MAGMA_tally2F_ZGETRF_GPU )
void magma_tally2f_zgetrf_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrf_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        ipiv,
        info );
}

#define magma_tally2f_zgetrf_nopiv_gpu FORTRAN_NAME( magma_tally2f_zgetrf_nopiv_gpu, MAGMA_tally2F_ZGETRF_NOPIV_GPU )
void magma_tally2f_zgetrf_nopiv_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrf_nopiv_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zgetri_gpu FORTRAN_NAME( magma_tally2f_zgetri_gpu, MAGMA_tally2F_ZGETRI_GPU )
void magma_tally2f_zgetri_gpu(
    magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *ipiv,
    devptr_t *dwork, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetri_gpu(
        *n,
        magma_tally2_zdevptr(dA), *ldda,
        ipiv,
        magma_tally2_zdevptr(dwork), *lwork,
        info );
}

#define magma_tally2f_zgetrs_gpu FORTRAN_NAME( magma_tally2f_zgetrs_gpu, MAGMA_tally2F_ZGETRS_GPU )
void magma_tally2f_zgetrs_gpu(
    const char* trans, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *ipiv,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrs_gpu(
        magma_tally2_trans_const(*trans), *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        ipiv,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zgetrs_nopiv_gpu FORTRAN_NAME( magma_tally2f_zgetrs_nopiv_gpu, MAGMA_tally2F_ZGETRS_NOPIV_GPU )
void magma_tally2f_zgetrs_nopiv_gpu(
    const char* trans, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zgetrs_nopiv_gpu(
        magma_tally2_trans_const(*trans), *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zheevd_gpu FORTRAN_NAME( magma_tally2f_zheevd_gpu, MAGMA_tally2F_ZHEEVD_GPU )
void magma_tally2f_zheevd_gpu(
    const char* jobz, const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    double *w,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevd_gpu(
        magma_tally2_vec_const(*jobz), magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        w,
        wA, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevdx_gpu FORTRAN_NAME( magma_tally2f_zheevdx_gpu, MAGMA_tally2F_ZHEEVDX_GPU )
void magma_tally2f_zheevdx_gpu(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu,
    magma_tally2_int_t *m,
    double *w,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevdx_gpu(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wA, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevr_gpu FORTRAN_NAME( magma_tally2f_zheevr_gpu, MAGMA_tally2F_ZHEEVR_GPU )
void magma_tally2f_zheevr_gpu(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu, double *abstol,
    magma_tally2_int_t *m,
    double *w,
    devptr_t *dZ, magma_tally2_int_t *lddz,
    magma_tally2_int_t *isuppz,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2DoubleComplex *wZ, magma_tally2_int_t *ldwz,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork, magma_tally2_int_t *lrwork,
    magma_tally2_int_t *iwork, magma_tally2_int_t *liwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevr_gpu(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        magma_tally2_zdevptr(dZ), *lddz,
        isuppz,
        wA, *ldwa,
        wZ, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally2f_zheevx_gpu FORTRAN_NAME( magma_tally2f_zheevx_gpu, MAGMA_tally2F_ZHEEVX_GPU )
void magma_tally2f_zheevx_gpu(
    const char* jobz, const char* range, const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda, double *vl, double *vu, magma_tally2_int_t *il, magma_tally2_int_t *iu, double *abstol,
    magma_tally2_int_t *m,
    double *w,
    devptr_t *dZ, magma_tally2_int_t *lddz,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2DoubleComplex *wZ, magma_tally2_int_t *ldwz,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    double *rwork,
    magma_tally2_int_t *iwork,
    magma_tally2_int_t *ifail,
    magma_tally2_int_t *info )
{
    magma_tally2_zheevx_gpu(
        magma_tally2_vec_const(*jobz), magma_tally2_range_const(*range), magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        magma_tally2_zdevptr(dZ), *lddz,
        wA, *ldwa,
        wZ, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_tally2f_zhegst_gpu FORTRAN_NAME( magma_tally2f_zhegst_gpu, MAGMA_tally2F_ZHEGST_GPU )
void magma_tally2f_zhegst_gpu(
    magma_tally2_int_t *itype, const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zhegst_gpu(
        *itype, magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zhetrd_gpu FORTRAN_NAME( magma_tally2f_zhetrd_gpu, MAGMA_tally2F_ZHETRD_GPU )
void magma_tally2f_zhetrd_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    double *d,
    double *e,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrd_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        d,
        e,
        tau,
        wA, *ldwa,
        work, *lwork,
        info );
}

#define magma_tally2f_zhetrd2_gpu FORTRAN_NAME( magma_tally2f_zhetrd2_gpu, MAGMA_tally2F_ZHETRD2_GPU )
void magma_tally2f_zhetrd2_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    double *d,
    double *e,
    magma_tally2DoubleComplex *tau,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2DoubleComplex *work, magma_tally2_int_t *lwork,
    devptr_t *dwork, magma_tally2_int_t *ldwork,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrd2_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        d,
        e,
        tau,
        wA, *ldwa,
        work, *lwork,
        magma_tally2_zdevptr(dwork), *ldwork,
        info );
}

#define magma_tally2f_zhetrf_nopiv_tally2_gpu FORTRAN_NAME( magma_tally2f_zhetrf_nopiv_tally2_gpu, MAGMA_tally2F_ZHETRF_NOPIV_GPU )
void magma_tally2f_zhetrf_nopiv_tally2_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *da, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zhetrf_nopiv_tally2_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(da), *ldda,
        info );
}

#define magma_tally2f_zlarf_gpu FORTRAN_NAME( magma_tally2f_zlarf_gpu, MAGMA_tally2F_ZLARF_GPU )
void magma_tally2f_zlarf_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dv,
    devptr_t *dtau,
    devptr_t *dC, magma_tally2_int_t *lddc )
{
    magma_tally2_zlarf_gpu(
        *m, *n,
        magma_tally2_zdevptr(dv),
        magma_tally2_zdevptr(dtau),
        magma_tally2_zdevptr(dC), *lddc );
}

#define magma_tally2f_zlarfb_gpu FORTRAN_NAME( magma_tally2f_zlarfb_gpu, MAGMA_tally2F_ZLARFB_GPU )
void magma_tally2f_zlarfb_gpu(
    const char* side, const char* trans, const char* direct, const char* storev, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dV, magma_tally2_int_t *lddv,
    devptr_t *dT, magma_tally2_int_t *lddt,
    devptr_t *dC, magma_tally2_int_t *lddc,
    devptr_t *dwork, magma_tally2_int_t *ldwork )
{
    magma_tally2_zlarfb_gpu(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), magma_tally2_direct_const(*direct), magma_tally2_storev_const(*storev), *m, *n, *k,
        magma_tally2_zdevptr(dV), *lddv,
        magma_tally2_zdevptr(dT), *lddt,
        magma_tally2_zdevptr(dC), *lddc,
        magma_tally2_zdevptr(dwork), *ldwork );
}

#define magma_tally2f_zlarfb_gpu_gemm FORTRAN_NAME( magma_tally2f_zlarfb_gpu_gemm, MAGMA_tally2F_ZLARFB_GPU_GEMM )
void magma_tally2f_zlarfb_gpu_gemm(
    const char* side, const char* trans, const char* direct, const char* storev, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dV, magma_tally2_int_t *lddv,
    devptr_t *dT, magma_tally2_int_t *lddt,
    devptr_t *dC, magma_tally2_int_t *lddc,
    devptr_t *dwork, magma_tally2_int_t *ldwork,
    devptr_t *dworkvt, magma_tally2_int_t *ldworkvt )
{
    magma_tally2_zlarfb_gpu_gemm(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), magma_tally2_direct_const(*direct), magma_tally2_storev_const(*storev), *m, *n, *k,
        magma_tally2_zdevptr(dV), *lddv,
        magma_tally2_zdevptr(dT), *lddt,
        magma_tally2_zdevptr(dC), *lddc,
        magma_tally2_zdevptr(dwork), *ldwork,
        magma_tally2_zdevptr(dworkvt), *ldworkvt );
}

#define magma_tally2f_zlarfb2_gpu FORTRAN_NAME( magma_tally2f_zlarfb2_gpu, MAGMA_tally2F_ZLARFB2_GPU )
void magma_tally2f_zlarfb2_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dV, magma_tally2_int_t *lddv,
    devptr_t *dT, magma_tally2_int_t *lddt,
    devptr_t *dC, magma_tally2_int_t *lddc,
    devptr_t *dwork, magma_tally2_int_t *ldwork )
{
    magma_tally2_zlarfb2_gpu(
        *m, *n, *k,
        magma_tally2_zdevptr(dV), *lddv,
        magma_tally2_zdevptr(dT), *lddt,
        magma_tally2_zdevptr(dC), *lddc,
        magma_tally2_zdevptr(dwork), *ldwork );
}

#define magma_tally2f_zlauum_gpu FORTRAN_NAME( magma_tally2f_zlauum_gpu, MAGMA_tally2F_ZLAUUM_GPU )
void magma_tally2f_zlauum_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zlauum_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zposv_gpu FORTRAN_NAME( magma_tally2f_zposv_gpu, MAGMA_tally2F_ZPOSV_GPU )
void magma_tally2f_zposv_gpu(
    const char* uplo, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zposv_gpu(
        magma_tally2_uplo_const(*uplo), *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zpotf2_gpu FORTRAN_NAME( magma_tally2f_zpotf2_gpu, MAGMA_tally2F_ZPOTF2_GPU )
void magma_tally2f_zpotf2_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotf2_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zpotrf_gpu FORTRAN_NAME( magma_tally2f_zpotrf_gpu, MAGMA_tally2F_ZPOTRF_GPU )
void magma_tally2f_zpotrf_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotrf_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zpotri_gpu FORTRAN_NAME( magma_tally2f_zpotri_gpu, MAGMA_tally2F_ZPOTRI_GPU )
void magma_tally2f_zpotri_gpu(
    const char* uplo, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotri_gpu(
        magma_tally2_uplo_const(*uplo), *n,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zpotrs_gpu FORTRAN_NAME( magma_tally2f_zpotrs_gpu, MAGMA_tally2F_ZPOTRS_GPU )
void magma_tally2f_zpotrs_gpu(
    const char* uplo, magma_tally2_int_t *n, magma_tally2_int_t *nrhs,
    devptr_t *dA, magma_tally2_int_t *ldda,
    devptr_t *dB, magma_tally2_int_t *lddb,
    magma_tally2_int_t *info )
{
    magma_tally2_zpotrs_gpu(
        magma_tally2_uplo_const(*uplo), *n, *nrhs,
        magma_tally2_zdevptr(dA), *ldda,
        magma_tally2_zdevptr(dB), *lddb,
        info );
}

#define magma_tally2f_zssssm_gpu FORTRAN_NAME( magma_tally2f_zssssm_gpu, MAGMA_tally2F_ZSSSSM_GPU )
void magma_tally2f_zssssm_gpu(
    const char* order, magma_tally2_int_t *m1, magma_tally2_int_t *n1, magma_tally2_int_t *m2, magma_tally2_int_t *n2, magma_tally2_int_t *k, magma_tally2_int_t *ib,
    devptr_t *dA1, magma_tally2_int_t *ldda1,
    devptr_t *dA2, magma_tally2_int_t *ldda2,
    devptr_t *dL1, magma_tally2_int_t *lddl1,
    devptr_t *dL2, magma_tally2_int_t *lddl2,
    magma_tally2_int_t *ipiv,
    magma_tally2_int_t *info )
{
    magma_tally2_zssssm_gpu(
        magma_tally2_order_const(*order), *m1, *n1, *m2, *n2, *k, *ib,
        magma_tally2_zdevptr(dA1), *ldda1,
        magma_tally2_zdevptr(dA2), *ldda2,
        magma_tally2_zdevptr(dL1), *lddl1,
        magma_tally2_zdevptr(dL2), *lddl2,
        ipiv,
        info );
}

#define magma_tally2f_ztrtri_gpu FORTRAN_NAME( magma_tally2f_ztrtri_gpu, MAGMA_tally2F_ZTRTRI_GPU )
void magma_tally2f_ztrtri_gpu(
    const char* uplo, const char* diag, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *info )
{
    magma_tally2_ztrtri_gpu(
        magma_tally2_uplo_const(*uplo), magma_tally2_diag_const(*diag), *n,
        magma_tally2_zdevptr(dA), *ldda,
        info );
}

#define magma_tally2f_zungqr_gpu FORTRAN_NAME( magma_tally2f_zungqr_gpu, MAGMA_tally2F_ZUNGQR_GPU )
void magma_tally2f_zungqr_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dT, magma_tally2_int_t *nb,
    magma_tally2_int_t *info )
{
    magma_tally2_zungqr_gpu(
        *m, *n, *k,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dT), *nb,
        info );
}

#define magma_tally2f_zunmql2_gpu FORTRAN_NAME( magma_tally2f_zunmql2_gpu, MAGMA_tally2F_ZUNMQL2_GPU )
void magma_tally2f_zunmql2_gpu(
    const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dC, magma_tally2_int_t *lddc,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmql2_gpu(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_tally2f_zunmqr_gpu FORTRAN_NAME( magma_tally2f_zunmqr_gpu, MAGMA_tally2F_ZUNMQR_GPU )
void magma_tally2f_zunmqr_gpu(
    const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dC, magma_tally2_int_t *lddc,
    magma_tally2DoubleComplex *hwork, magma_tally2_int_t *lwork,
    devptr_t *dT, magma_tally2_int_t *nb,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmqr_gpu(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dC), *lddc,
        hwork, *lwork,
        magma_tally2_zdevptr(dT), *nb,
        info );
}

#define magma_tally2f_zunmqr2_gpu FORTRAN_NAME( magma_tally2f_zunmqr2_gpu, MAGMA_tally2F_ZUNMQR2_GPU )
void magma_tally2f_zunmqr2_gpu(
    const char* side, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n, magma_tally2_int_t *k,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dC, magma_tally2_int_t *lddc,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmqr2_gpu(
        magma_tally2_side_const(*side), magma_tally2_trans_const(*trans), *m, *n, *k,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_tally2f_zunmtr_gpu FORTRAN_NAME( magma_tally2f_zunmtr_gpu, MAGMA_tally2F_ZUNMTR_GPU )
void magma_tally2f_zunmtr_gpu(
    const char* side, const char* uplo, const char* trans, magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2DoubleComplex *tau,
    devptr_t *dC, magma_tally2_int_t *lddc,
    magma_tally2DoubleComplex *wA, magma_tally2_int_t *ldwa,
    magma_tally2_int_t *info )
{
    magma_tally2_zunmtr_gpu(
        magma_tally2_side_const(*side), magma_tally2_uplo_const(*uplo), magma_tally2_trans_const(*trans), *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        tau,
        magma_tally2_zdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_tally2f_znan_inf FORTRAN_NAME( magma_tally2f_znan_inf, MAGMA_tally2F_ZNAN_INF )
void magma_tally2f_znan_inf(
    const char* uplo, magma_tally2_int_t *m, magma_tally2_int_t *n,
    const magma_tally2DoubleComplex *A, magma_tally2_int_t *lda,
    magma_tally2_int_t *cnt_nan,
    magma_tally2_int_t *cnt_inf )
{
    magma_tally2_znan_inf(
        magma_tally2_uplo_const(*uplo), *m, *n,
        A, *lda,
        cnt_nan,
        cnt_inf );
}

#define magma_tally2f_znan_inf_gpu FORTRAN_NAME( magma_tally2f_znan_inf_gpu, MAGMA_tally2F_ZNAN_INF_GPU )
void magma_tally2f_znan_inf_gpu(
    const char* uplo, magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda,
    magma_tally2_int_t *cnt_nan,
    magma_tally2_int_t *cnt_inf )
{
    magma_tally2_znan_inf_gpu(
        magma_tally2_uplo_const(*uplo), *m, *n,
        magma_tally2_zdevptr(dA), *ldda,
        cnt_nan,
        cnt_inf );
}

#define magma_tally2f_zprint FORTRAN_NAME( magma_tally2f_zprint, MAGMA_tally2F_ZPRINT )
void magma_tally2f_zprint(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    const magma_tally2DoubleComplex *A, magma_tally2_int_t *lda )
{
    magma_tally2_zprint(
        *m, *n,
        A, *lda );
}

#define magma_tally2f_zprint_gpu FORTRAN_NAME( magma_tally2f_zprint_gpu, MAGMA_tally2F_ZPRINT_GPU )
void magma_tally2f_zprint_gpu(
    magma_tally2_int_t *m, magma_tally2_int_t *n,
    devptr_t *dA, magma_tally2_int_t *ldda )
{
    magma_tally2_zprint_gpu(
        *m, *n,
        magma_tally2_zdevptr(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
