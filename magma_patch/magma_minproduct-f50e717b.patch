diff -aur magma_minproduct.cloned/interface_cuda/interface.cpp magma_minproduct/interface_cuda/interface.cpp
--- magma_minproduct.cloned/interface_cuda/interface.cpp	2020-08-27 18:18:47.593393000 -0400
+++ magma_minproduct/interface_cuda/interface.cpp	2020-08-27 18:46:46.799358000 -0400
@@ -1155,18 +1155,18 @@
     const char* func, const char* file, int line )
 {
     if ( queue != NULL ) {
-    #ifdef HAVE_CUDA
-        if ( queue->cublas__ != NULL && (queue->own__ & own_cublas)) {
-            cublasStatus_t stat = cublasDestroy( queue->cublas__ );
+    //#ifdef HAVE_CUDA
+        if ( queue->hipblas__ != NULL && (queue->own__ & own_hipblas)) {
+            hipblasStatus_t stat = hipblasDestroy( queue->hipblas__ );
             check_xerror( stat, func, file, line );
             MAGMA_minproduct_UNUSED( stat );
         }
-        if ( queue->cusparse__ != NULL && (queue->own__ & own_cusparse)) {
-            cusparseStatus_t stat = cusparseDestroy( queue->cusparse__ );
+        if ( queue->hipsparse__ != NULL && (queue->own__ & own_hipsparse)) {
+            hipsparseStatus_t stat = hipsparseDestroy( queue->hipsparse__ );
             check_xerror( stat, func, file, line );
             MAGMA_minproduct_UNUSED( stat );
         }
-    #endif
+    //#endif
         if ( queue->stream__ != NULL && (queue->own__ & own_stream)) {
             cudaError_t err = cudaStreamDestroy( queue->stream__ );
             check_xerror( err, func, file, line );
@@ -1179,10 +1179,10 @@
         queue->own__      = own_none;
         queue->device__   = -1;
         queue->stream__   = NULL;
-    #ifdef HAVE_CUDA
-        queue->cublas__   = NULL;
-        queue->cusparse__ = NULL;
-    #endif
+    //#ifdef HAVE_CUDA
+        queue->hipblas__   = NULL;
+        queue->hipsparse__ = NULL;
+    //#endif
         magma_minproduct_free_cpu( queue );
     }
 }
diff -aur magma_minproduct.cloned/magma_minproductblas/gemm_stencil.cuh magma_minproduct/magma_minproductblas/gemm_stencil.cuh
--- magma_minproduct.cloned/magma_minproductblas/gemm_stencil.cuh	2020-08-27 18:18:47.792390000 -0400
+++ magma_minproduct/magma_minproductblas/gemm_stencil.cuh	2020-08-27 18:20:01.823396000 -0400
@@ -346,7 +346,10 @@
                       #ifdef CONJ_B
                         fma(rA[m], conj(rB[n]), rC[n][m]);
                       #else
-                        fma(rA[m], rB[n], rC[n][m]);
+                        //---BEGIN MODIFIED GENOMICS_METRICS
+                        //fma(rA[m], rB[n], rC[n][m]);
+                        myfmin(rA[m], rB[n], rC[n][m]);
+                        //---END MODIFIED GENOMICS_METRICS
                       #endif
                     #endif
                 }
@@ -421,7 +424,10 @@
                   #ifdef CONJ_B
                     fma(rA[m], conj(rB[n]), rC[n][m]);
                   #else
-                    fma(rA[m], rB[n], rC[n][m]);
+                    //---BEGIN MODIFIED GENOMICS_METRICS
+                    //fma(rA[m], rB[n], rC[n][m]);
+                    myfmin(rA[m], rB[n], rC[n][m]);
+                    //---END MODIFIED GENOMICS_METRICS
                   #endif
                 #endif
             }
diff -aur magma_minproduct.cloned/magma_minproductblas/gemm_stencil_defs.h magma_minproduct/magma_minproductblas/gemm_stencil_defs.h
--- magma_minproduct.cloned/magma_minproductblas/gemm_stencil_defs.h	2020-08-27 18:18:47.798388000 -0400
+++ magma_minproduct/magma_minproductblas/gemm_stencil_defs.h	2020-08-27 18:20:01.826391000 -0400
@@ -99,12 +99,18 @@
     #define add(A, B)        magma_minproductCadd(A, B)
     #define mul(A, B)        magma_minproductCmul(A, B)
     #define fma(A, B, C) C = magma_minproductCfma(A, B, C)
+    //---BEGIN ADDED GENOMICS_METRICS
+    #define myfmin(A, B, C) C = magma_minproductCfma(A, B, C)
+    //---END ADDED GENOMICS_METRICS
     #define make_FloatingPoint(x, y) MAGMA_minproduct_Z_MAKE(x, y);
   #else
     #define conj(A)          magma_minproductConjf(A)
     #define add(A, B)        magma_minproductCaddf(A, B)
     #define mul(A, B)        magma_minproductCmulf(A, B)
     #define fma(A, B, C) C = magma_minproductCfmaf(A, B, C)
+    //---BEGIN ADDED GENOMICS_METRICS
+    #define myfmin(A, B, C) C = magma_minproductCfmaf(A, B, C)
+    //---END ADDED GENOMICS_METRICS
     #define make_FloatingPoint(x, y) MAGMA_minproduct_C_MAKE(x, y);
   #endif
 #else
@@ -112,6 +118,23 @@
     #define add(A, B)         (A+B)
     #define mul(A, B)         (A*B)
     #define fma(A, B, C) C += (A*B)
+//#define myfmin(A, B, C) fma(A, B, C)
+    //---BEGIN ADDED GENOMICS_METRICS
+    #ifdef DOUBLE
+      //#if (__CUDA_ARCH__ == 700)
+      //  #define myfmin(A, B, C) C += ((double)fminf((float)(A), (float)(B)))
+      //#else
+        #define myfmin(A, B, C) C += fmin((A), (B))
+      //#endif
+      //#define myfmin(A, B, C) C += fmin((A), (B))
+      //#define myfmin(A, B, C) C += ( (A) < (B) ? (A) : (B) )
+      //#define myfmin(A, B, C) C += fminf((A), (B))
+      //#define myfmin(A, B, C) C += ( ( (A) + (B) - fabs( (A) - (B) ) ) * .5 )
+    #else
+      #define myfmin(A, B, C) C += fminf((A), (B))
+      //#define myfmin(A, B, C) C += ( (A) < (B) ? (A) : (B) )
+    #endif
+    //---END ADDED GENOMICS_METRICS
     #define make_FloatingPoint(x, y) (x)
 #endif
 
