#!/bin/bash
#==============================================================================
#
# Create a custom version of Magma with its own namespace.
#
#==============================================================================

TAG="${1:-}"
if [ "$TAG" = "" -o "$TAG" = "-h" -o "$TAG" = "--help" ] ; then 
  echo "Usage: clone_magma <tag>"
  echo "  where <tag> is an alphanumeric string. magma_<tag> is the new library name."
  exit 0
fi

MATCH="`echo \"$TAG\" | sed -e 's/[a-zA-Z0-9]//g'`"

if [ "$MATCH" != "" ] ; then
  echo "clone_magma: invalid argument." 1>&2
  exit 1
fi

MAGMA="magma-1.6.2"
#MAGMA="magma-2.1.0"

SOURCE_FILE=${MAGMA}.tar.gz
if [ ! -e $SOURCE_FILE ] ; then
  echo "Error: unable to locate source file. $SOURCE_FILE" 1>&2
  exit 1
fi

SOURCE_DIR=$MAGMA
#rm -rf $SOURCE_DIR
if [ -e $SOURCE_DIR ] ; then
  echo "Error: source directory already exists; please delete. $SOURCE_DIR" 1>&2
  exit 1
fi

TARGET_DIR=$(echo $SOURCE_DIR | sed "s/magma/&_$TAG/")
if [ -e $TARGET_DIR ] ; then
  echo "Error: trget directory already exists. $SOURCE_DIR" 1>&2
  exit 1
fi

echo "Unpacking ..."

gunzip <$SOURCE_FILE | tar xf -

MATCHES=`grep -ri $TAG $SOURCE_DIR | wc -l`

if [ $MATCHES != 0 ] ; then
  echo "Error: tag string already occurs in Magma source." 1>&2
  exit 1
fi

echo "Changing strings in each file ..."

#for file in `find $MAGMA -name '*' -type f -print` ; do
echo "  magma"
for file in `grep -ril 'magma' $SOURCE_DIR` ; do
  sed -i "s/[mM][aA][gG][mM][aA]/&_$TAG/g" $file
done

NAMES="
lapack_bool_const
lapack_order_const
lapack_trans_const
lapack_uplo_const
lapack_diag_const
lapack_side_const
lapack_norm_const
lapack_dist_const
lapack_sym_const
lapack_pack_const
lapack_vec_const
lapack_range_const
lapack_vect_const
lapack_direct_const
lapack_storev_const
lapacke_bool_const
lapacke_order_const
lapacke_trans_const
lapacke_uplo_const
lapacke_diag_const
lapacke_side_const
lapacke_norm_const
lapacke_dist_const
lapacke_sym_const
lapacke_pack_const
lapacke_vec_const
lapacke_range_const
lapacke_vect_const
lapacke_direct_const
lapacke_storev_const
zhetrf_nopiv
zpanel_to_q
zq_to_panel
chetrf_nopiv
cpanel_to_q
cq_to_panel
dsytrf_nopiv
dpanel_to_q
dq_to_panel
ssytrf_nopiv
spanel_to_q
sq_to_panel
swp2pswp

lapacke_const
zgehrd_data
cgehrd_data
sgehrd_data
dgehrd_data

lapack_const
cublas_trans_const
cublas_uplo_const
cublas_diag_const
cublas_side_const

zlaset_lower_kernel
zlaset_upper_kernel
zlaset_full_kernel
"

for name in $NAMES ; do
  echo "  $name"
  for file in `grep -ril "$name" $SOURCE_DIR` ; do
    sed -i "s/$name/&_$TAG/g" $file
  done
done

echo "Renaming files and directories ..."

#---NOTE: this is somewhat brittle, may break if ordering is wrong.

NAMES="
zhetrf_nopiv
zpanel_to_q
chetrf_nopiv
cpanel_to_q
dsytrf_nopiv
dpanel_to_q
ssytrf_nopiv
spanel_to_q
"

for name in $NAMES ; do
  echo "  $name"
  for item in `find $SOURCE_DIR -name "${name}*" -print | sort | tac` ; do
    mv $item `echo $item | sed -e "s/\(.*\)\(${name}\)\(.*\)/\1\2_$TAG\3/g"`
  done
done

echo "  magma"
for item in `find $SOURCE_DIR -iname '*magma*' -print | sort | tac` ; do
  mv $item `echo $item | sed -e "s/\(.*\)\([mM][aA][gG][mM][aA]\)\(.*\)/\1\2_$TAG\3/g"`
done

cat <<EOF

If no errors occurred above, the clone process is now complete.  To
prepare the cloned Magma code for usage, please do the following:

1. Copy the file make.inc into the new cloned Magma directory.

2. Make the desired changes to Magma, such as redefinition of certain
   mathematical operations. See in particular gemm_stencil.cuh,
   gemm_stencil_defs.h, dgemm_tesla_T_N.cu in the blas subdirectory.

3. If desired, add/commit the new Magma clone to the repository.

4. Compile the source code to deploy for usage.

EOF

exit 0

#==============================================================================
