/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl ../include/magma_minproduct_z.i
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma_minproduct.h"
#include "magma_minproduct_mangling.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
    #define magma_minproduct_idevptr(ptr_) ((int*)               (ptr_))
    #define magma_minproduct_zdevptr(ptr_) ((magma_minproductDoubleComplex*)(ptr_))
    #ifndef magma_minproduct_cdevptr
    #define magma_minproduct_cdevptr(ptr_) ((magma_minproductFloatComplex*) (ptr_))
    #endif
    #ifndef magma_minproduct_ddevptr
    #define magma_minproduct_ddevptr(ptr_) ((double*)            (ptr_))
    #endif
    #ifndef magma_minproduct_sdevptr
    #define magma_minproduct_sdevptr(ptr_) ((float*)             (ptr_))
    #endif
#else
    #define magma_minproduct_idevptr(ptr_) ((int*)               (uintptr_t)(*(ptr_)))
    #define magma_minproduct_zdevptr(ptr_) ((magma_minproductDoubleComplex*)(uintptr_t)(*(ptr_)))
    #ifndef magma_minproduct_cdevptr
    #define magma_minproduct_cdevptr(ptr_) ((magma_minproductFloatComplex*) (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_minproduct_ddevptr
    #define magma_minproduct_ddevptr(ptr_) ((double*)            (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_minproduct_sdevptr
    #define magma_minproduct_sdevptr(ptr_) ((float*)             (uintptr_t)(*(ptr_)))
    #endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define magma_minproductf_get_zpotrf_nb FORTRAN_NAME( magma_minproductf_get_zpotrf_nb, MAGMA_minproductF_GET_ZPOTRF_NB )
magma_minproduct_int_t magma_minproductf_get_zpotrf_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zpotrf_nb( *m );
}

#define magma_minproductf_get_zgetrf_nb FORTRAN_NAME( magma_minproductf_get_zgetrf_nb, MAGMA_minproductF_GET_ZGETRF_NB )
magma_minproduct_int_t magma_minproductf_get_zgetrf_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgetrf_nb( *m );
}

#define magma_minproductf_get_zgetri_nb FORTRAN_NAME( magma_minproductf_get_zgetri_nb, MAGMA_minproductF_GET_ZGETRI_NB )
magma_minproduct_int_t magma_minproductf_get_zgetri_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgetri_nb( *m );
}

#define magma_minproductf_get_zgeqp3_nb FORTRAN_NAME( magma_minproductf_get_zgeqp3_nb, MAGMA_minproductF_GET_ZGEQP3_NB )
magma_minproduct_int_t magma_minproductf_get_zgeqp3_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgeqp3_nb( *m );
}

#define magma_minproductf_get_zgeqrf_nb FORTRAN_NAME( magma_minproductf_get_zgeqrf_nb, MAGMA_minproductF_GET_ZGEQRF_NB )
magma_minproduct_int_t magma_minproductf_get_zgeqrf_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgeqrf_nb( *m );
}

#define magma_minproductf_get_zgeqlf_nb FORTRAN_NAME( magma_minproductf_get_zgeqlf_nb, MAGMA_minproductF_GET_ZGEQLF_NB )
magma_minproduct_int_t magma_minproductf_get_zgeqlf_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgeqlf_nb( *m );
}

#define magma_minproductf_get_zgehrd_nb FORTRAN_NAME( magma_minproductf_get_zgehrd_nb, MAGMA_minproductF_GET_ZGEHRD_NB )
magma_minproduct_int_t magma_minproductf_get_zgehrd_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgehrd_nb( *m );
}

#define magma_minproductf_get_zhetrd_nb FORTRAN_NAME( magma_minproductf_get_zhetrd_nb, MAGMA_minproductF_GET_ZHETRD_NB )
magma_minproduct_int_t magma_minproductf_get_zhetrd_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zhetrd_nb( *m );
}

#define magma_minproductf_get_zhetrf_nb FORTRAN_NAME( magma_minproductf_get_zhetrf_nb, MAGMA_minproductF_GET_ZHETRF_NB )
magma_minproduct_int_t magma_minproductf_get_zhetrf_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zhetrf_nb( *m );
}

#define magma_minproductf_get_zhetrf_nopiv_nb FORTRAN_NAME( magma_minproductf_get_zhetrf_nopiv_nb, MAGMA_minproductF_GET_ZHETRF_NOPIV_NB )
magma_minproduct_int_t magma_minproductf_get_zhetrf_nopiv_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zhetrf_nopiv_nb( *m );
}

#define magma_minproductf_get_zgelqf_nb FORTRAN_NAME( magma_minproductf_get_zgelqf_nb, MAGMA_minproductF_GET_ZGELQF_NB )
magma_minproduct_int_t magma_minproductf_get_zgelqf_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgelqf_nb( *m );
}

#define magma_minproductf_get_zgebrd_nb FORTRAN_NAME( magma_minproductf_get_zgebrd_nb, MAGMA_minproductF_GET_ZGEBRD_NB )
magma_minproduct_int_t magma_minproductf_get_zgebrd_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgebrd_nb( *m );
}

#define magma_minproductf_get_zhegst_nb FORTRAN_NAME( magma_minproductf_get_zhegst_nb, MAGMA_minproductF_GET_ZHEGST_NB )
magma_minproduct_int_t magma_minproductf_get_zhegst_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zhegst_nb( *m );
}

#define magma_minproductf_get_zgesvd_nb FORTRAN_NAME( magma_minproductf_get_zgesvd_nb, MAGMA_minproductF_GET_ZGESVD_NB )
magma_minproduct_int_t magma_minproductf_get_zgesvd_nb( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zgesvd_nb( *m );
}

#define magma_minproductf_get_zhegst_nb_m FORTRAN_NAME( magma_minproductf_get_zhegst_nb_m, MAGMA_minproductF_GET_ZHEGST_NB_M )
magma_minproduct_int_t magma_minproductf_get_zhegst_nb_m( magma_minproduct_int_t *m )
{
    return magma_minproduct_get_zhegst_nb_m( *m );
}

#define magma_minproductf_get_zbulge_nb FORTRAN_NAME( magma_minproductf_get_zbulge_nb, MAGMA_minproductF_GET_ZBULGE_NB )
void magma_minproductf_get_zbulge_nb(
    magma_minproduct_int_t *m, magma_minproduct_int_t *nbthreads )
{
    magma_minproduct_get_zbulge_nb(
        *m, *nbthreads );
}

#define magma_minproductf_zbulge_get_Vblksiz FORTRAN_NAME( magma_minproductf_zbulge_get_Vblksiz, MAGMA_minproductF_ZBULGE_GET_VBLKSIZ )
void magma_minproductf_zbulge_get_Vblksiz(
    magma_minproduct_int_t *m, magma_minproduct_int_t *nb, magma_minproduct_int_t *nbthreads )
{
    magma_minproduct_zbulge_get_Vblksiz(
        *m, *nb, *nbthreads );
}

#define magma_minproductf_get_zbulge_gcperf FORTRAN_NAME( magma_minproductf_get_zbulge_gcperf, MAGMA_minproductF_GET_ZBULGE_GCPERF )
void magma_minproductf_get_zbulge_gcperf(
     )
{
    magma_minproduct_get_zbulge_gcperf(
         );
}

#define magma_minproductf_zgebrd FORTRAN_NAME( magma_minproductf_zgebrd, MAGMA_minproductF_ZGEBRD )
void magma_minproductf_zgebrd(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *d,
    double *e,
    magma_minproductDoubleComplex *tauq,
    magma_minproductDoubleComplex *taup,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magma_minproductf_zgeev FORTRAN_NAME( magma_minproductf_zgeev, MAGMA_minproductF_ZGEEV )
void magma_minproductf_zgeev(
    const char* jobvl, const char* jobvr, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *w,
    magma_minproductDoubleComplex *VL, magma_minproduct_int_t *ldvl,
    magma_minproductDoubleComplex *VR, magma_minproduct_int_t *ldvr,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeev(
        magma_minproduct_vec_const(*jobvl), magma_minproduct_vec_const(*jobvr), *n,
        A, *lda,
        w,
        VL, *ldvl,
        VR, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magma_minproductf_zgehrd FORTRAN_NAME( magma_minproductf_zgehrd, MAGMA_minproductF_ZGEHRD )
void magma_minproductf_zgehrd(
    magma_minproduct_int_t *n, magma_minproduct_int_t *ilo, magma_minproduct_int_t *ihi,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    devptr_t *dT,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        magma_minproduct_zdevptr(dT),
        info );
}

#define magma_minproductf_zgehrd2 FORTRAN_NAME( magma_minproductf_zgehrd2, MAGMA_minproductF_ZGEHRD2 )
void magma_minproductf_zgehrd2(
    magma_minproduct_int_t *n, magma_minproduct_int_t *ilo, magma_minproduct_int_t *ihi,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgelqf FORTRAN_NAME( magma_minproductf_zgelqf, MAGMA_minproductF_ZGELQF )
void magma_minproductf_zgelqf(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgeqlf FORTRAN_NAME( magma_minproductf_zgeqlf, MAGMA_minproductF_ZGEQLF )
void magma_minproductf_zgeqlf(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgeqp3 FORTRAN_NAME( magma_minproductf_zgeqp3, MAGMA_minproductF_ZGEQP3 )
void magma_minproductf_zgeqp3(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *jpvt,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqp3(
        *m, *n,
        A, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magma_minproductf_zgeqrf FORTRAN_NAME( magma_minproductf_zgeqrf, MAGMA_minproductF_ZGEQRF )
void magma_minproductf_zgeqrf(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgeqrf_ooc FORTRAN_NAME( magma_minproductf_zgeqrf_ooc, MAGMA_minproductF_ZGEQRF_OOC )
void magma_minproductf_zgeqrf_ooc(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgeqrf4 FORTRAN_NAME( magma_minproductf_zgeqrf4, MAGMA_minproductF_ZGEQRF4 )
void magma_minproductf_zgeqrf4(
    magma_minproduct_int_t *ngpu, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrf4(
        *ngpu, *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgesdd FORTRAN_NAME( magma_minproductf_zgesdd, MAGMA_minproductF_ZGESDD )
void magma_minproductf_zgesdd(
    const char* jobz, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *s,
    magma_minproductDoubleComplex *U, magma_minproduct_int_t *ldu,
    magma_minproductDoubleComplex *VT, magma_minproduct_int_t *ldvt,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *iwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgesdd(
        magma_minproduct_vec_const(*jobz), *m, *n,
        A, *lda,
        s,
        U, *ldu,
        VT, *ldvt,
        work, *lwork,
        rwork,
        iwork,
        info );
}

#define magma_minproductf_zgesv FORTRAN_NAME( magma_minproductf_zgesv, MAGMA_minproductF_ZGESV )
void magma_minproductf_zgesv(
    magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *ipiv,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magma_minproductf_zgesv_rbt FORTRAN_NAME( magma_minproductf_zgesv_rbt, MAGMA_minproductF_ZGESV_RBT )
void magma_minproductf_zgesv_rbt(
    const char* ref, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgesv_rbt(
        magma_minproduct_bool_const(*ref), *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_minproductf_zgesvd FORTRAN_NAME( magma_minproductf_zgesvd, MAGMA_minproductF_ZGESVD )
void magma_minproductf_zgesvd(
    const char* jobu, const char* jobvt, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *s,
    magma_minproductDoubleComplex *U, magma_minproduct_int_t *ldu,
    magma_minproductDoubleComplex *VT, magma_minproduct_int_t *ldvt,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgesvd(
        magma_minproduct_vec_const(*jobu), magma_minproduct_vec_const(*jobvt), *m, *n,
        A, *lda,
        s,
        U, *ldu,
        VT, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magma_minproductf_zgetf2_nopiv FORTRAN_NAME( magma_minproductf_zgetf2_nopiv, MAGMA_minproductF_ZGETF2_NOPIV )
void magma_minproductf_zgetf2_nopiv(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetf2_nopiv(
        *m, *n,
        A, *lda,
        info );
}

#define magma_minproductf_zgetrf FORTRAN_NAME( magma_minproductf_zgetrf, MAGMA_minproductF_ZGETRF )
void magma_minproductf_zgetrf(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_minproductf_zgetrf_nopiv FORTRAN_NAME( magma_minproductf_zgetrf_nopiv, MAGMA_minproductF_ZGETRF_NOPIV )
void magma_minproductf_zgetrf_nopiv(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrf_nopiv(
        *m, *n,
        A, *lda,
        info );
}

#define magma_minproductf_zgetrf_piv FORTRAN_NAME( magma_minproductf_zgetrf_piv, MAGMA_minproductF_ZGETRF_PIV )
void magma_minproductf_zgetrf_piv(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *NB,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrf_piv(
        *m, *n, *NB,
        A, *lda,
        ipiv,
        info );
}

#define magma_minproductf_zheevd FORTRAN_NAME( magma_minproductf_zheevd, MAGMA_minproductF_ZHEEVD )
void magma_minproductf_zheevd(
    const char* jobz, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevd(
        magma_minproduct_vec_const(*jobz), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevdx FORTRAN_NAME( magma_minproductf_zheevdx, MAGMA_minproductF_ZHEEVDX )
void magma_minproductf_zheevdx(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevdx(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevdx_2stage FORTRAN_NAME( magma_minproductf_zheevdx_2stage, MAGMA_minproductF_ZHEEVDX_2STAGE )
void magma_minproductf_zheevdx_2stage(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevdx_2stage(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevr FORTRAN_NAME( magma_minproductf_zheevr, MAGMA_minproductF_ZHEEVR )
void magma_minproductf_zheevr(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu, double *abstol,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *Z, magma_minproduct_int_t *ldz,
    magma_minproduct_int_t *isuppz,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevr(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevx FORTRAN_NAME( magma_minproductf_zheevx, MAGMA_minproductF_ZHEEVX )
void magma_minproductf_zheevx(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu, double *abstol,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *Z, magma_minproduct_int_t *ldz,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *iwork,
    magma_minproduct_int_t *ifail,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevx(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_minproductf_zhegst FORTRAN_NAME( magma_minproductf_zhegst, MAGMA_minproductF_ZHEGST )
void magma_minproductf_zhegst(
    magma_minproduct_int_t *itype, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegst(
        *itype, magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_minproductf_zhegvd FORTRAN_NAME( magma_minproductf_zhegvd, MAGMA_minproductF_ZHEGVD )
void magma_minproductf_zhegvd(
    magma_minproduct_int_t *itype, const char* jobz, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvd(
        *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegvdx FORTRAN_NAME( magma_minproductf_zhegvdx, MAGMA_minproductF_ZHEGVDX )
void magma_minproductf_zhegvdx(
    magma_minproduct_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvdx(
        *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegvdx_2stage FORTRAN_NAME( magma_minproductf_zhegvdx_2stage, MAGMA_minproductF_ZHEGVDX_2STAGE )
void magma_minproductf_zhegvdx_2stage(
    magma_minproduct_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvdx_2stage(
        *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegvr FORTRAN_NAME( magma_minproductf_zhegvr, MAGMA_minproductF_ZHEGVR )
void magma_minproductf_zhegvr(
    magma_minproduct_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu, double *abstol,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *Z, magma_minproduct_int_t *ldz,
    magma_minproduct_int_t *isuppz,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvr(
        *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegvx FORTRAN_NAME( magma_minproductf_zhegvx, MAGMA_minproductF_ZHEGVX )
void magma_minproductf_zhegvx(
    magma_minproduct_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu, double *abstol,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *Z, magma_minproduct_int_t *ldz,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *iwork,
    magma_minproduct_int_t *ifail,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvx(
        *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_minproductf_zhesv FORTRAN_NAME( magma_minproductf_zhesv, MAGMA_minproductF_ZHESV )
void magma_minproductf_zhesv(
    const char* uplo, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *ipiv,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhesv(
        magma_minproduct_uplo_const(*uplo), *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magma_minproductf_zhetrd FORTRAN_NAME( magma_minproductf_zhetrd, MAGMA_minproductF_ZHETRD )
void magma_minproductf_zhetrd(
    const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *d,
    double *e,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrd(
        magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zhetrf FORTRAN_NAME( magma_minproductf_zhetrf, MAGMA_minproductF_ZHETRF )
void magma_minproductf_zhetrf(
    const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrf(
        magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_minproductf_zhetrf_nopiv FORTRAN_NAME( magma_minproductf_zhetrf_nopiv, MAGMA_minproductF_ZHETRF_NOPIV )
void magma_minproductf_zhetrf_nopiv(
    const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *a, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrf_nopiv(
        magma_minproduct_uplo_const(*uplo), *n,
        a, *lda,
        info );
}

#define magma_minproductf_zhetrd_hb2st FORTRAN_NAME( magma_minproductf_zhetrd_hb2st, MAGMA_minproductF_ZHETRD_HB2ST )
void magma_minproductf_zhetrd_hb2st(
    const char* uplo, magma_minproduct_int_t *n, magma_minproduct_int_t *nb, magma_minproduct_int_t *Vblksiz,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *d,
    double *e,
    magma_minproductDoubleComplex *V, magma_minproduct_int_t *ldv,
    magma_minproductDoubleComplex *TAU, magma_minproduct_int_t *compT,
    magma_minproductDoubleComplex *T, magma_minproduct_int_t *ldt )
{
    magma_minproduct_zhetrd_hb2st(
        magma_minproduct_uplo_const(*uplo), *n, *nb, *Vblksiz,
        A, *lda,
        d,
        e,
        V, *ldv,
        TAU, *compT,
        T, *ldt );
}

#define magma_minproductf_zhetrd_he2hb FORTRAN_NAME( magma_minproductf_zhetrd_he2hb, MAGMA_minproductF_ZHETRD_HE2HB )
void magma_minproductf_zhetrd_he2hb(
    const char* uplo, magma_minproduct_int_t *n, magma_minproduct_int_t *nb,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    devptr_t *dT,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrd_he2hb(
        magma_minproduct_uplo_const(*uplo), *n, *nb,
        A, *lda,
        tau,
        work, *lwork,
        magma_minproduct_zdevptr(dT),
        info );
}

#define magma_minproductf_zlatrsd FORTRAN_NAME( magma_minproductf_zlatrsd, MAGMA_minproductF_ZLATRSD )
void magma_minproductf_zlatrsd(
    const char* uplo, const char* trans, const char* diag, const char* normin, magma_minproduct_int_t *n,
    const magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, magma_minproductDoubleComplex *lambda,
    magma_minproductDoubleComplex *x,
    double *scale,
    double *cnorm,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zlatrsd(
        magma_minproduct_uplo_const(*uplo), magma_minproduct_trans_const(*trans), magma_minproduct_diag_const(*diag), magma_minproduct_bool_const(*normin), *n,
        A, *lda, *lambda,
        x,
        scale,
        cnorm,
        info );
}

#define magma_minproductf_zlauum FORTRAN_NAME( magma_minproductf_zlauum, MAGMA_minproductF_ZLAUUM )
void magma_minproductf_zlauum(
    const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zlauum(
        magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_minproductf_zposv FORTRAN_NAME( magma_minproductf_zposv, MAGMA_minproductF_ZPOSV )
void magma_minproductf_zposv(
    const char* uplo, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zposv(
        magma_minproduct_uplo_const(*uplo), *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_minproductf_zpotrf FORTRAN_NAME( magma_minproductf_zpotrf, MAGMA_minproductF_ZPOTRF )
void magma_minproductf_zpotrf(
    const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotrf(
        magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_minproductf_zpotri FORTRAN_NAME( magma_minproductf_zpotri, MAGMA_minproductF_ZPOTRI )
void magma_minproductf_zpotri(
    const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotri(
        magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_minproductf_zstedx FORTRAN_NAME( magma_minproductf_zstedx, MAGMA_minproductF_ZSTEDX )
void magma_minproductf_zstedx(
    const char* range, magma_minproduct_int_t *n, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    double *d,
    double *e,
    magma_minproductDoubleComplex *Z, magma_minproduct_int_t *ldz,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    devptr_t *dwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zstedx(
        magma_minproduct_range_const(*range), *n, *vl, *vu, *il, *iu,
        d,
        e,
        Z, *ldz,
        rwork, *lrwork,
        iwork, *liwork,
        magma_minproduct_ddevptr(dwork),
        info );
}

#define magma_minproductf_ztrevc3 FORTRAN_NAME( magma_minproductf_ztrevc3, MAGMA_minproductF_ZTREVC3 )
void magma_minproductf_ztrevc3(
    const char* side, const char* howmany,
    magma_minproduct_int_t *select, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *T, magma_minproduct_int_t *ldt,
    magma_minproductDoubleComplex *VL, magma_minproduct_int_t *ldvl,
    magma_minproductDoubleComplex *VR, magma_minproduct_int_t *ldvr, magma_minproduct_int_t *mm,
    magma_minproduct_int_t *mout,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_ztrevc3(
        magma_minproduct_side_const(*side), magma_minproduct_vec_const(*howmany),
        select, *n,
        T, *ldt,
        VL, *ldvl,
        VR, *ldvr, *mm,
        mout,
        work, *lwork,
        rwork,
        info );
}

#define magma_minproductf_ztrevc3_mt FORTRAN_NAME( magma_minproductf_ztrevc3_mt, MAGMA_minproductF_ZTREVC3_MT )
void magma_minproductf_ztrevc3_mt(
    const char* side, const char* howmany,
    magma_minproduct_int_t *select, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *T, magma_minproduct_int_t *ldt,
    magma_minproductDoubleComplex *VL, magma_minproduct_int_t *ldvl,
    magma_minproductDoubleComplex *VR, magma_minproduct_int_t *ldvr, magma_minproduct_int_t *mm,
    magma_minproduct_int_t *mout,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_ztrevc3_mt(
        magma_minproduct_side_const(*side), magma_minproduct_vec_const(*howmany),
        select, *n,
        T, *ldt,
        VL, *ldvl,
        VR, *ldvr, *mm,
        mout,
        work, *lwork,
        rwork,
        info );
}

#define magma_minproductf_ztrtri FORTRAN_NAME( magma_minproductf_ztrtri, MAGMA_minproductF_ZTRTRI )
void magma_minproductf_ztrtri(
    const char* uplo, const char* diag, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_ztrtri(
        magma_minproduct_uplo_const(*uplo), magma_minproduct_diag_const(*diag), *n,
        A, *lda,
        info );
}

#define magma_minproductf_zunghr FORTRAN_NAME( magma_minproductf_zunghr, MAGMA_minproductF_ZUNGHR )
void magma_minproductf_zunghr(
    magma_minproduct_int_t *n, magma_minproduct_int_t *ilo, magma_minproduct_int_t *ihi,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT, magma_minproduct_int_t *nb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunghr(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        magma_minproduct_zdevptr(dT), *nb,
        info );
}

#define magma_minproductf_zungqr FORTRAN_NAME( magma_minproductf_zungqr, MAGMA_minproductF_ZUNGQR )
void magma_minproductf_zungqr(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT, magma_minproduct_int_t *nb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zungqr(
        *m, *n, *k,
        A, *lda,
        tau,
        magma_minproduct_zdevptr(dT), *nb,
        info );
}

#define magma_minproductf_zungqr2 FORTRAN_NAME( magma_minproductf_zungqr2, MAGMA_minproductF_ZUNGQR2 )
void magma_minproductf_zungqr2(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zungqr2(
        *m, *n, *k,
        A, *lda,
        tau,
        info );
}

#define magma_minproductf_zunmbr FORTRAN_NAME( magma_minproductf_zunmbr, MAGMA_minproductF_ZUNMBR )
void magma_minproductf_zunmbr(
    const char* vect, const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmbr(
        magma_minproduct_vect_const(*vect), magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zunmlq FORTRAN_NAME( magma_minproductf_zunmlq, MAGMA_minproductF_ZUNMLQ )
void magma_minproductf_zunmlq(
    const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmlq(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zunmql FORTRAN_NAME( magma_minproductf_zunmql, MAGMA_minproductF_ZUNMQL )
void magma_minproductf_zunmql(
    const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmql(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zunmqr FORTRAN_NAME( magma_minproductf_zunmqr, MAGMA_minproductF_ZUNMQR )
void magma_minproductf_zunmqr(
    const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmqr(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zunmtr FORTRAN_NAME( magma_minproductf_zunmtr, MAGMA_minproductF_ZUNMTR )
void magma_minproductf_zunmtr(
    const char* side, const char* uplo, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmtr(
        magma_minproduct_side_const(*side), magma_minproduct_uplo_const(*uplo), magma_minproduct_trans_const(*trans), *m, *n,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zgeev_m FORTRAN_NAME( magma_minproductf_zgeev_m, MAGMA_minproductF_ZGEEV_M )
void magma_minproductf_zgeev_m(
    const char* jobvl, const char* jobvr, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *w,
    magma_minproductDoubleComplex *VL, magma_minproduct_int_t *ldvl,
    magma_minproductDoubleComplex *VR, magma_minproduct_int_t *ldvr,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeev_m(
        magma_minproduct_vec_const(*jobvl), magma_minproduct_vec_const(*jobvr), *n,
        A, *lda,
        w,
        VL, *ldvl,
        VR, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magma_minproductf_zgehrd_m FORTRAN_NAME( magma_minproductf_zgehrd_m, MAGMA_minproductF_ZGEHRD_M )
void magma_minproductf_zgehrd_m(
    magma_minproduct_int_t *n, magma_minproduct_int_t *ilo, magma_minproduct_int_t *ihi,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproductDoubleComplex *T,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magma_minproductf_zgetrf_m FORTRAN_NAME( magma_minproductf_zgetrf_m, MAGMA_minproductF_ZGETRF_M )
void magma_minproductf_zgetrf_m(
    magma_minproduct_int_t *ngpu, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrf_m(
        *ngpu, *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_minproductf_zheevd_m FORTRAN_NAME( magma_minproductf_zheevd_m, MAGMA_minproductF_ZHEEVD_M )
void magma_minproductf_zheevd_m(
    magma_minproduct_int_t *ngpu, const char* jobz, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevd_m(
        *ngpu, magma_minproduct_vec_const(*jobz), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevdx_2stage_m FORTRAN_NAME( magma_minproductf_zheevdx_2stage_m, MAGMA_minproductF_ZHEEVDX_2STAGE_M )
void magma_minproductf_zheevdx_2stage_m(
    magma_minproduct_int_t *ngpu, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevdx_2stage_m(
        *ngpu, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevdx_m FORTRAN_NAME( magma_minproductf_zheevdx_m, MAGMA_minproductF_ZHEEVDX_M )
void magma_minproductf_zheevdx_m(
    magma_minproduct_int_t *ngpu, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevdx_m(
        *ngpu, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegst_m FORTRAN_NAME( magma_minproductf_zhegst_m, MAGMA_minproductF_ZHEGST_M )
void magma_minproductf_zhegst_m(
    magma_minproduct_int_t *ngpu, magma_minproduct_int_t *itype, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegst_m(
        *ngpu, *itype, magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_minproductf_zhegvd_m FORTRAN_NAME( magma_minproductf_zhegvd_m, MAGMA_minproductF_ZHEGVD_M )
void magma_minproductf_zhegvd_m(
    magma_minproduct_int_t *ngpu, magma_minproduct_int_t *itype, const char* jobz, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvd_m(
        *ngpu, *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegvdx_2stage_m FORTRAN_NAME( magma_minproductf_zhegvdx_2stage_m, MAGMA_minproductF_ZHEGVDX_2STAGE_M )
void magma_minproductf_zhegvdx_2stage_m(
    magma_minproduct_int_t *ngpu, magma_minproduct_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvdx_2stage_m(
        *ngpu, *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zhegvdx_m FORTRAN_NAME( magma_minproductf_zhegvdx_m, MAGMA_minproductF_ZHEGVDX_M )
void magma_minproductf_zhegvdx_m(
    magma_minproduct_int_t *ngpu, magma_minproduct_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegvdx_m(
        *ngpu, *itype, magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zpotrf_m FORTRAN_NAME( magma_minproductf_zpotrf_m, MAGMA_minproductF_ZPOTRF_M )
void magma_minproductf_zpotrf_m(
    magma_minproduct_int_t *ngpu, const char* uplo, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotrf_m(
        *ngpu, magma_minproduct_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_minproductf_zstedx_m FORTRAN_NAME( magma_minproductf_zstedx_m, MAGMA_minproductF_ZSTEDX_M )
void magma_minproductf_zstedx_m(
    magma_minproduct_int_t *ngpu, const char* range, magma_minproduct_int_t *n, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    double *d,
    double *e,
    magma_minproductDoubleComplex *Z, magma_minproduct_int_t *ldz,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zstedx_m(
        *ngpu, magma_minproduct_range_const(*range), *n, *vl, *vu, *il, *iu,
        d,
        e,
        Z, *ldz,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_ztrsm_m FORTRAN_NAME( magma_minproductf_ztrsm_m, MAGMA_minproductF_ZTRSM_M )
void magma_minproductf_ztrsm_m(
    magma_minproduct_int_t *ngpu, const char* side, const char* uplo, const char* transa, const char* diag, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproductDoubleComplex *alpha,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *B, magma_minproduct_int_t *ldb )
{
    magma_minproduct_ztrsm_m(
        *ngpu, magma_minproduct_side_const(*side), magma_minproduct_uplo_const(*uplo), magma_minproduct_trans_const(*transa), magma_minproduct_diag_const(*diag), *m, *n, *alpha,
        A, *lda,
        B, *ldb );
}

#define magma_minproductf_zunghr_m FORTRAN_NAME( magma_minproductf_zunghr_m, MAGMA_minproductF_ZUNGHR_M )
void magma_minproductf_zunghr_m(
    magma_minproduct_int_t *n, magma_minproduct_int_t *ilo, magma_minproduct_int_t *ihi,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *T, magma_minproduct_int_t *nb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magma_minproductf_zungqr_m FORTRAN_NAME( magma_minproductf_zungqr_m, MAGMA_minproductF_ZUNGQR_M )
void magma_minproductf_zungqr_m(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *T, magma_minproduct_int_t *nb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zungqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magma_minproductf_zunmqr_m FORTRAN_NAME( magma_minproductf_zunmqr_m, MAGMA_minproductF_ZUNMQR_M )
void magma_minproductf_zunmqr_m(
    magma_minproduct_int_t *ngpu, const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmqr_m(
        *ngpu, magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zunmtr_m FORTRAN_NAME( magma_minproductf_zunmtr_m, MAGMA_minproductF_ZUNMTR_M )
void magma_minproductf_zunmtr_m(
    magma_minproduct_int_t *ngpu, const char* side, const char* uplo, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *C, magma_minproduct_int_t *ldc,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmtr_m(
        *ngpu, magma_minproduct_side_const(*side), magma_minproduct_uplo_const(*uplo), magma_minproduct_trans_const(*trans), *m, *n,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_minproductf_zgegqr_gpu FORTRAN_NAME( magma_minproductf_zgegqr_gpu, MAGMA_minproductF_ZGEGQR_GPU )
void magma_minproductf_zgegqr_gpu(
    magma_minproduct_int_t *ikind, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dwork,
    magma_minproductDoubleComplex *work,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgegqr_gpu(
        *ikind, *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dwork),
        work,
        info );
}

#define magma_minproductf_zgelqf_gpu FORTRAN_NAME( magma_minproductf_zgelqf_gpu, MAGMA_minproductF_ZGELQF_GPU )
void magma_minproductf_zgelqf_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgelqf_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magma_minproductf_zgels_gpu FORTRAN_NAME( magma_minproductf_zgels_gpu, MAGMA_minproductF_ZGELS_GPU )
void magma_minproductf_zgels_gpu(
    const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproductDoubleComplex *hwork, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgels_gpu(
        magma_minproduct_trans_const(*trans), *m, *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_minproductf_zgels3_gpu FORTRAN_NAME( magma_minproductf_zgels3_gpu, MAGMA_minproductF_ZGELS3_GPU )
void magma_minproductf_zgels3_gpu(
    const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproductDoubleComplex *hwork, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgels3_gpu(
        magma_minproduct_trans_const(*trans), *m, *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_minproductf_zgeqp3_gpu FORTRAN_NAME( magma_minproductf_zgeqp3_gpu, MAGMA_minproductF_ZGEQP3_GPU )
void magma_minproductf_zgeqp3_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *jpvt,
    magma_minproductDoubleComplex *tau,
    devptr_t *dwork, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqp3_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        jpvt,
        tau,
        magma_minproduct_zdevptr(dwork), *lwork,
        rwork,
        info );
}

#define magma_minproductf_zgeqr2x_gpu FORTRAN_NAME( magma_minproductf_zgeqr2x_gpu, MAGMA_minproductF_ZGEQR2X_GPU )
void magma_minproductf_zgeqr2x_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqr2x_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dtau),
        magma_minproduct_zdevptr(dT),
        magma_minproduct_zdevptr(ddA),
        magma_minproduct_ddevptr(dwork),
        info );
}

#define magma_minproductf_zgeqr2x2_gpu FORTRAN_NAME( magma_minproductf_zgeqr2x2_gpu, MAGMA_minproductF_ZGEQR2X2_GPU )
void magma_minproductf_zgeqr2x2_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqr2x2_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dtau),
        magma_minproduct_zdevptr(dT),
        magma_minproduct_zdevptr(ddA),
        magma_minproduct_ddevptr(dwork),
        info );
}

#define magma_minproductf_zgeqr2x3_gpu FORTRAN_NAME( magma_minproductf_zgeqr2x3_gpu, MAGMA_minproductF_ZGEQR2X3_GPU )
void magma_minproductf_zgeqr2x3_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqr2x3_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dtau),
        magma_minproduct_zdevptr(dT),
        magma_minproduct_zdevptr(ddA),
        magma_minproduct_ddevptr(dwork),
        info );
}

#define magma_minproductf_zgeqr2x4_gpu FORTRAN_NAME( magma_minproductf_zgeqr2x4_gpu, MAGMA_minproductF_ZGEQR2X4_GPU )
void magma_minproductf_zgeqr2x4_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork, magma_minproduct_queue_t *queue,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqr2x4_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dtau),
        magma_minproduct_zdevptr(dT),
        magma_minproduct_zdevptr(ddA),
        magma_minproduct_ddevptr(dwork), *queue,
        info );
}

#define magma_minproductf_zgeqrf_gpu FORTRAN_NAME( magma_minproductf_zgeqrf_gpu, MAGMA_minproductF_ZGEQRF_GPU )
void magma_minproductf_zgeqrf_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrf_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dT),
        info );
}

#define magma_minproductf_zgeqrf2_gpu FORTRAN_NAME( magma_minproductf_zgeqrf2_gpu, MAGMA_minproductF_ZGEQRF2_GPU )
void magma_minproductf_zgeqrf2_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrf2_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        info );
}

#define magma_minproductf_zgeqrf3_gpu FORTRAN_NAME( magma_minproductf_zgeqrf3_gpu, MAGMA_minproductF_ZGEQRF3_GPU )
void magma_minproductf_zgeqrf3_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrf3_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dT),
        info );
}

#define magma_minproductf_zgeqrs_gpu FORTRAN_NAME( magma_minproductf_zgeqrs_gpu, MAGMA_minproductF_ZGEQRS_GPU )
void magma_minproductf_zgeqrs_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproductDoubleComplex *hwork, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrs_gpu(
        *m, *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dT),
        magma_minproduct_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_minproductf_zgeqrs3_gpu FORTRAN_NAME( magma_minproductf_zgeqrs3_gpu, MAGMA_minproductF_ZGEQRS3_GPU )
void magma_minproductf_zgeqrs3_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproductDoubleComplex *hwork, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgeqrs3_gpu(
        *m, *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dT),
        magma_minproduct_zdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_minproductf_zgerbt_gpu FORTRAN_NAME( magma_minproductf_zgerbt_gpu, MAGMA_minproductF_ZGERBT_GPU )
void magma_minproductf_zgerbt_gpu(
    const char* gen, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproductDoubleComplex *U,
    magma_minproductDoubleComplex *V,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgerbt_gpu(
        magma_minproduct_bool_const(*gen), *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        U,
        V,
        info );
}

#define magma_minproductf_zgessm_gpu FORTRAN_NAME( magma_minproductf_zgessm_gpu, MAGMA_minproductF_ZGESSM_GPU )
void magma_minproductf_zgessm_gpu(
    const char* order, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k, magma_minproduct_int_t *ib,
    magma_minproduct_int_t *ipiv,
    devptr_t *dL1, magma_minproduct_int_t *lddl1,
    devptr_t *dL, magma_minproduct_int_t *lddl,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgessm_gpu(
        magma_minproduct_order_const(*order), *m, *n, *k, *ib,
        ipiv,
        magma_minproduct_zdevptr(dL1), *lddl1,
        magma_minproduct_zdevptr(dL), *lddl,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zgesv_gpu FORTRAN_NAME( magma_minproductf_zgesv_gpu, MAGMA_minproductF_ZGESV_GPU )
void magma_minproductf_zgesv_gpu(
    magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *ipiv,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgesv_gpu(
        *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        ipiv,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zgesv_nopiv_gpu FORTRAN_NAME( magma_minproductf_zgesv_nopiv_gpu, MAGMA_minproductF_ZGESV_NOPIV_GPU )
void magma_minproductf_zgesv_nopiv_gpu(
    magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgesv_nopiv_gpu(
        *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zgetf2_gpu FORTRAN_NAME( magma_minproductf_zgetf2_gpu, MAGMA_minproductF_ZGETF2_GPU )
void magma_minproductf_zgetf2_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetf2_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        ipiv,
        info );
}

#define magma_minproductf_zgetrf_gpu FORTRAN_NAME( magma_minproductf_zgetrf_gpu, MAGMA_minproductF_ZGETRF_GPU )
void magma_minproductf_zgetrf_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrf_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        ipiv,
        info );
}

#define magma_minproductf_zgetrf_nopiv_gpu FORTRAN_NAME( magma_minproductf_zgetrf_nopiv_gpu, MAGMA_minproductF_ZGETRF_NOPIV_GPU )
void magma_minproductf_zgetrf_nopiv_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrf_nopiv_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zgetri_gpu FORTRAN_NAME( magma_minproductf_zgetri_gpu, MAGMA_minproductF_ZGETRI_GPU )
void magma_minproductf_zgetri_gpu(
    magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *ipiv,
    devptr_t *dwork, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetri_gpu(
        *n,
        magma_minproduct_zdevptr(dA), *ldda,
        ipiv,
        magma_minproduct_zdevptr(dwork), *lwork,
        info );
}

#define magma_minproductf_zgetrs_gpu FORTRAN_NAME( magma_minproductf_zgetrs_gpu, MAGMA_minproductF_ZGETRS_GPU )
void magma_minproductf_zgetrs_gpu(
    const char* trans, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *ipiv,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrs_gpu(
        magma_minproduct_trans_const(*trans), *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        ipiv,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zgetrs_nopiv_gpu FORTRAN_NAME( magma_minproductf_zgetrs_nopiv_gpu, MAGMA_minproductF_ZGETRS_NOPIV_GPU )
void magma_minproductf_zgetrs_nopiv_gpu(
    const char* trans, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zgetrs_nopiv_gpu(
        magma_minproduct_trans_const(*trans), *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zheevd_gpu FORTRAN_NAME( magma_minproductf_zheevd_gpu, MAGMA_minproductF_ZHEEVD_GPU )
void magma_minproductf_zheevd_gpu(
    const char* jobz, const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    double *w,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevd_gpu(
        magma_minproduct_vec_const(*jobz), magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        w,
        wA, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevdx_gpu FORTRAN_NAME( magma_minproductf_zheevdx_gpu, MAGMA_minproductF_ZHEEVDX_GPU )
void magma_minproductf_zheevdx_gpu(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu,
    magma_minproduct_int_t *m,
    double *w,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevdx_gpu(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wA, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevr_gpu FORTRAN_NAME( magma_minproductf_zheevr_gpu, MAGMA_minproductF_ZHEEVR_GPU )
void magma_minproductf_zheevr_gpu(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu, double *abstol,
    magma_minproduct_int_t *m,
    double *w,
    devptr_t *dZ, magma_minproduct_int_t *lddz,
    magma_minproduct_int_t *isuppz,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproductDoubleComplex *wZ, magma_minproduct_int_t *ldwz,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork, magma_minproduct_int_t *lrwork,
    magma_minproduct_int_t *iwork, magma_minproduct_int_t *liwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevr_gpu(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        magma_minproduct_zdevptr(dZ), *lddz,
        isuppz,
        wA, *ldwa,
        wZ, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_minproductf_zheevx_gpu FORTRAN_NAME( magma_minproductf_zheevx_gpu, MAGMA_minproductF_ZHEEVX_GPU )
void magma_minproductf_zheevx_gpu(
    const char* jobz, const char* range, const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda, double *vl, double *vu, magma_minproduct_int_t *il, magma_minproduct_int_t *iu, double *abstol,
    magma_minproduct_int_t *m,
    double *w,
    devptr_t *dZ, magma_minproduct_int_t *lddz,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproductDoubleComplex *wZ, magma_minproduct_int_t *ldwz,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    double *rwork,
    magma_minproduct_int_t *iwork,
    magma_minproduct_int_t *ifail,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zheevx_gpu(
        magma_minproduct_vec_const(*jobz), magma_minproduct_range_const(*range), magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        magma_minproduct_zdevptr(dZ), *lddz,
        wA, *ldwa,
        wZ, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_minproductf_zhegst_gpu FORTRAN_NAME( magma_minproductf_zhegst_gpu, MAGMA_minproductF_ZHEGST_GPU )
void magma_minproductf_zhegst_gpu(
    magma_minproduct_int_t *itype, const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhegst_gpu(
        *itype, magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zhetrd_gpu FORTRAN_NAME( magma_minproductf_zhetrd_gpu, MAGMA_minproductF_ZHETRD_GPU )
void magma_minproductf_zhetrd_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    double *d,
    double *e,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrd_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        d,
        e,
        tau,
        wA, *ldwa,
        work, *lwork,
        info );
}

#define magma_minproductf_zhetrd2_gpu FORTRAN_NAME( magma_minproductf_zhetrd2_gpu, MAGMA_minproductF_ZHETRD2_GPU )
void magma_minproductf_zhetrd2_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    double *d,
    double *e,
    magma_minproductDoubleComplex *tau,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproductDoubleComplex *work, magma_minproduct_int_t *lwork,
    devptr_t *dwork, magma_minproduct_int_t *ldwork,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrd2_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        d,
        e,
        tau,
        wA, *ldwa,
        work, *lwork,
        magma_minproduct_zdevptr(dwork), *ldwork,
        info );
}

#define magma_minproductf_zhetrf_nopiv_gpu FORTRAN_NAME( magma_minproductf_zhetrf_nopiv_gpu, MAGMA_minproductF_ZHETRF_NOPIV_GPU )
void magma_minproductf_zhetrf_nopiv_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *da, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zhetrf_nopiv_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(da), *ldda,
        info );
}

#define magma_minproductf_zlarf_gpu FORTRAN_NAME( magma_minproductf_zlarf_gpu, MAGMA_minproductF_ZLARF_GPU )
void magma_minproductf_zlarf_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dv,
    devptr_t *dtau,
    devptr_t *dC, magma_minproduct_int_t *lddc )
{
    magma_minproduct_zlarf_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dv),
        magma_minproduct_zdevptr(dtau),
        magma_minproduct_zdevptr(dC), *lddc );
}

#define magma_minproductf_zlarfb_gpu FORTRAN_NAME( magma_minproductf_zlarfb_gpu, MAGMA_minproductF_ZLARFB_GPU )
void magma_minproductf_zlarfb_gpu(
    const char* side, const char* trans, const char* direct, const char* storev, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dV, magma_minproduct_int_t *lddv,
    devptr_t *dT, magma_minproduct_int_t *lddt,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    devptr_t *dwork, magma_minproduct_int_t *ldwork )
{
    magma_minproduct_zlarfb_gpu(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), magma_minproduct_direct_const(*direct), magma_minproduct_storev_const(*storev), *m, *n, *k,
        magma_minproduct_zdevptr(dV), *lddv,
        magma_minproduct_zdevptr(dT), *lddt,
        magma_minproduct_zdevptr(dC), *lddc,
        magma_minproduct_zdevptr(dwork), *ldwork );
}

#define magma_minproductf_zlarfb_gpu_gemm FORTRAN_NAME( magma_minproductf_zlarfb_gpu_gemm, MAGMA_minproductF_ZLARFB_GPU_GEMM )
void magma_minproductf_zlarfb_gpu_gemm(
    const char* side, const char* trans, const char* direct, const char* storev, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dV, magma_minproduct_int_t *lddv,
    devptr_t *dT, magma_minproduct_int_t *lddt,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    devptr_t *dwork, magma_minproduct_int_t *ldwork,
    devptr_t *dworkvt, magma_minproduct_int_t *ldworkvt )
{
    magma_minproduct_zlarfb_gpu_gemm(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), magma_minproduct_direct_const(*direct), magma_minproduct_storev_const(*storev), *m, *n, *k,
        magma_minproduct_zdevptr(dV), *lddv,
        magma_minproduct_zdevptr(dT), *lddt,
        magma_minproduct_zdevptr(dC), *lddc,
        magma_minproduct_zdevptr(dwork), *ldwork,
        magma_minproduct_zdevptr(dworkvt), *ldworkvt );
}

#define magma_minproductf_zlarfb2_gpu FORTRAN_NAME( magma_minproductf_zlarfb2_gpu, MAGMA_minproductF_ZLARFB2_GPU )
void magma_minproductf_zlarfb2_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dV, magma_minproduct_int_t *lddv,
    devptr_t *dT, magma_minproduct_int_t *lddt,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    devptr_t *dwork, magma_minproduct_int_t *ldwork )
{
    magma_minproduct_zlarfb2_gpu(
        *m, *n, *k,
        magma_minproduct_zdevptr(dV), *lddv,
        magma_minproduct_zdevptr(dT), *lddt,
        magma_minproduct_zdevptr(dC), *lddc,
        magma_minproduct_zdevptr(dwork), *ldwork );
}

#define magma_minproductf_zlauum_gpu FORTRAN_NAME( magma_minproductf_zlauum_gpu, MAGMA_minproductF_ZLAUUM_GPU )
void magma_minproductf_zlauum_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zlauum_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zposv_gpu FORTRAN_NAME( magma_minproductf_zposv_gpu, MAGMA_minproductF_ZPOSV_GPU )
void magma_minproductf_zposv_gpu(
    const char* uplo, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zposv_gpu(
        magma_minproduct_uplo_const(*uplo), *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zpotf2_gpu FORTRAN_NAME( magma_minproductf_zpotf2_gpu, MAGMA_minproductF_ZPOTF2_GPU )
void magma_minproductf_zpotf2_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotf2_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zpotrf_gpu FORTRAN_NAME( magma_minproductf_zpotrf_gpu, MAGMA_minproductF_ZPOTRF_GPU )
void magma_minproductf_zpotrf_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotrf_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zpotri_gpu FORTRAN_NAME( magma_minproductf_zpotri_gpu, MAGMA_minproductF_ZPOTRI_GPU )
void magma_minproductf_zpotri_gpu(
    const char* uplo, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotri_gpu(
        magma_minproduct_uplo_const(*uplo), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zpotrs_gpu FORTRAN_NAME( magma_minproductf_zpotrs_gpu, MAGMA_minproductF_ZPOTRS_GPU )
void magma_minproductf_zpotrs_gpu(
    const char* uplo, magma_minproduct_int_t *n, magma_minproduct_int_t *nrhs,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    devptr_t *dB, magma_minproduct_int_t *lddb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zpotrs_gpu(
        magma_minproduct_uplo_const(*uplo), *n, *nrhs,
        magma_minproduct_zdevptr(dA), *ldda,
        magma_minproduct_zdevptr(dB), *lddb,
        info );
}

#define magma_minproductf_zssssm_gpu FORTRAN_NAME( magma_minproductf_zssssm_gpu, MAGMA_minproductF_ZSSSSM_GPU )
void magma_minproductf_zssssm_gpu(
    const char* order, magma_minproduct_int_t *m1, magma_minproduct_int_t *n1, magma_minproduct_int_t *m2, magma_minproduct_int_t *n2, magma_minproduct_int_t *k, magma_minproduct_int_t *ib,
    devptr_t *dA1, magma_minproduct_int_t *ldda1,
    devptr_t *dA2, magma_minproduct_int_t *ldda2,
    devptr_t *dL1, magma_minproduct_int_t *lddl1,
    devptr_t *dL2, magma_minproduct_int_t *lddl2,
    magma_minproduct_int_t *ipiv,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zssssm_gpu(
        magma_minproduct_order_const(*order), *m1, *n1, *m2, *n2, *k, *ib,
        magma_minproduct_zdevptr(dA1), *ldda1,
        magma_minproduct_zdevptr(dA2), *ldda2,
        magma_minproduct_zdevptr(dL1), *lddl1,
        magma_minproduct_zdevptr(dL2), *lddl2,
        ipiv,
        info );
}

#define magma_minproductf_ztrtri_gpu FORTRAN_NAME( magma_minproductf_ztrtri_gpu, MAGMA_minproductF_ZTRTRI_GPU )
void magma_minproductf_ztrtri_gpu(
    const char* uplo, const char* diag, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *info )
{
    magma_minproduct_ztrtri_gpu(
        magma_minproduct_uplo_const(*uplo), magma_minproduct_diag_const(*diag), *n,
        magma_minproduct_zdevptr(dA), *ldda,
        info );
}

#define magma_minproductf_zungqr_gpu FORTRAN_NAME( magma_minproductf_zungqr_gpu, MAGMA_minproductF_ZUNGQR_GPU )
void magma_minproductf_zungqr_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dT, magma_minproduct_int_t *nb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zungqr_gpu(
        *m, *n, *k,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dT), *nb,
        info );
}

#define magma_minproductf_zunmql2_gpu FORTRAN_NAME( magma_minproductf_zunmql2_gpu, MAGMA_minproductF_ZUNMQL2_GPU )
void magma_minproductf_zunmql2_gpu(
    const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmql2_gpu(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_minproductf_zunmqr_gpu FORTRAN_NAME( magma_minproductf_zunmqr_gpu, MAGMA_minproductF_ZUNMQR_GPU )
void magma_minproductf_zunmqr_gpu(
    const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    magma_minproductDoubleComplex *hwork, magma_minproduct_int_t *lwork,
    devptr_t *dT, magma_minproduct_int_t *nb,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmqr_gpu(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dC), *lddc,
        hwork, *lwork,
        magma_minproduct_zdevptr(dT), *nb,
        info );
}

#define magma_minproductf_zunmqr2_gpu FORTRAN_NAME( magma_minproductf_zunmqr2_gpu, MAGMA_minproductF_ZUNMQR2_GPU )
void magma_minproductf_zunmqr2_gpu(
    const char* side, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n, magma_minproduct_int_t *k,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmqr2_gpu(
        magma_minproduct_side_const(*side), magma_minproduct_trans_const(*trans), *m, *n, *k,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_minproductf_zunmtr_gpu FORTRAN_NAME( magma_minproductf_zunmtr_gpu, MAGMA_minproductF_ZUNMTR_GPU )
void magma_minproductf_zunmtr_gpu(
    const char* side, const char* uplo, const char* trans, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproductDoubleComplex *tau,
    devptr_t *dC, magma_minproduct_int_t *lddc,
    magma_minproductDoubleComplex *wA, magma_minproduct_int_t *ldwa,
    magma_minproduct_int_t *info )
{
    magma_minproduct_zunmtr_gpu(
        magma_minproduct_side_const(*side), magma_minproduct_uplo_const(*uplo), magma_minproduct_trans_const(*trans), *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        tau,
        magma_minproduct_zdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_minproductf_znan_inf FORTRAN_NAME( magma_minproductf_znan_inf, MAGMA_minproductF_ZNAN_INF )
void magma_minproductf_znan_inf(
    const char* uplo, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    const magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda,
    magma_minproduct_int_t *cnt_nan,
    magma_minproduct_int_t *cnt_inf )
{
    magma_minproduct_znan_inf(
        magma_minproduct_uplo_const(*uplo), *m, *n,
        A, *lda,
        cnt_nan,
        cnt_inf );
}

#define magma_minproductf_znan_inf_gpu FORTRAN_NAME( magma_minproductf_znan_inf_gpu, MAGMA_minproductF_ZNAN_INF_GPU )
void magma_minproductf_znan_inf_gpu(
    const char* uplo, magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda,
    magma_minproduct_int_t *cnt_nan,
    magma_minproduct_int_t *cnt_inf )
{
    magma_minproduct_znan_inf_gpu(
        magma_minproduct_uplo_const(*uplo), *m, *n,
        magma_minproduct_zdevptr(dA), *ldda,
        cnt_nan,
        cnt_inf );
}

#define magma_minproductf_zprint FORTRAN_NAME( magma_minproductf_zprint, MAGMA_minproductF_ZPRINT )
void magma_minproductf_zprint(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    const magma_minproductDoubleComplex *A, magma_minproduct_int_t *lda )
{
    magma_minproduct_zprint(
        *m, *n,
        A, *lda );
}

#define magma_minproductf_zprint_gpu FORTRAN_NAME( magma_minproductf_zprint_gpu, MAGMA_minproductF_ZPRINT_GPU )
void magma_minproductf_zprint_gpu(
    magma_minproduct_int_t *m, magma_minproduct_int_t *n,
    devptr_t *dA, magma_minproduct_int_t *ldda )
{
    magma_minproduct_zprint_gpu(
        *m, *n,
        magma_minproduct_zdevptr(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
