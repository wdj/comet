/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl ../include/magma_tally4_c.i
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma_tally4.h"
#include "magma_tally4_mangling.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
    #define magma_tally4_idevptr(ptr_) ((int*)               (ptr_))
    #define magma_tally4_zdevptr(ptr_) ((magma_tally4DoubleComplex*)(ptr_))
    #ifndef magma_tally4_cdevptr
    #define magma_tally4_cdevptr(ptr_) ((magma_tally4FloatComplex*) (ptr_))
    #endif
    #ifndef magma_tally4_ddevptr
    #define magma_tally4_ddevptr(ptr_) ((double*)            (ptr_))
    #endif
    #ifndef magma_tally4_sdevptr
    #define magma_tally4_sdevptr(ptr_) ((float*)             (ptr_))
    #endif
#else
    #define magma_tally4_idevptr(ptr_) ((int*)               (uintptr_t)(*(ptr_)))
    #define magma_tally4_zdevptr(ptr_) ((magma_tally4DoubleComplex*)(uintptr_t)(*(ptr_)))
    #ifndef magma_tally4_cdevptr
    #define magma_tally4_cdevptr(ptr_) ((magma_tally4FloatComplex*) (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_tally4_ddevptr
    #define magma_tally4_ddevptr(ptr_) ((double*)            (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_tally4_sdevptr
    #define magma_tally4_sdevptr(ptr_) ((float*)             (uintptr_t)(*(ptr_)))
    #endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define magma_tally4f_get_cpotrf_nb FORTRAN_NAME( magma_tally4f_get_cpotrf_nb, MAGMA_tally4F_GET_CPOTRF_NB )
magma_tally4_int_t magma_tally4f_get_cpotrf_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cpotrf_nb( *m );
}

#define magma_tally4f_get_cgetrf_nb FORTRAN_NAME( magma_tally4f_get_cgetrf_nb, MAGMA_tally4F_GET_CGETRF_NB )
magma_tally4_int_t magma_tally4f_get_cgetrf_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgetrf_nb( *m );
}

#define magma_tally4f_get_cgetri_nb FORTRAN_NAME( magma_tally4f_get_cgetri_nb, MAGMA_tally4F_GET_CGETRI_NB )
magma_tally4_int_t magma_tally4f_get_cgetri_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgetri_nb( *m );
}

#define magma_tally4f_get_cgeqp3_nb FORTRAN_NAME( magma_tally4f_get_cgeqp3_nb, MAGMA_tally4F_GET_CGEQP3_NB )
magma_tally4_int_t magma_tally4f_get_cgeqp3_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgeqp3_nb( *m );
}

#define magma_tally4f_get_cgeqrf_nb FORTRAN_NAME( magma_tally4f_get_cgeqrf_nb, MAGMA_tally4F_GET_CGEQRF_NB )
magma_tally4_int_t magma_tally4f_get_cgeqrf_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgeqrf_nb( *m );
}

#define magma_tally4f_get_cgeqlf_nb FORTRAN_NAME( magma_tally4f_get_cgeqlf_nb, MAGMA_tally4F_GET_CGEQLF_NB )
magma_tally4_int_t magma_tally4f_get_cgeqlf_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgeqlf_nb( *m );
}

#define magma_tally4f_get_cgehrd_nb FORTRAN_NAME( magma_tally4f_get_cgehrd_nb, MAGMA_tally4F_GET_CGEHRD_NB )
magma_tally4_int_t magma_tally4f_get_cgehrd_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgehrd_nb( *m );
}

#define magma_tally4f_get_chetrd_nb FORTRAN_NAME( magma_tally4f_get_chetrd_nb, MAGMA_tally4F_GET_CHETRD_NB )
magma_tally4_int_t magma_tally4f_get_chetrd_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_chetrd_nb( *m );
}

#define magma_tally4f_get_chetrf_nb FORTRAN_NAME( magma_tally4f_get_chetrf_nb, MAGMA_tally4F_GET_CHETRF_NB )
magma_tally4_int_t magma_tally4f_get_chetrf_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_chetrf_nb( *m );
}

#define magma_tally4f_get_chetrf_nopiv_nb FORTRAN_NAME( magma_tally4f_get_chetrf_nopiv_nb, MAGMA_tally4F_GET_CHETRF_NOPIV_NB )
magma_tally4_int_t magma_tally4f_get_chetrf_nopiv_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_chetrf_nopiv_nb( *m );
}

#define magma_tally4f_get_cgelqf_nb FORTRAN_NAME( magma_tally4f_get_cgelqf_nb, MAGMA_tally4F_GET_CGELQF_NB )
magma_tally4_int_t magma_tally4f_get_cgelqf_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgelqf_nb( *m );
}

#define magma_tally4f_get_cgebrd_nb FORTRAN_NAME( magma_tally4f_get_cgebrd_nb, MAGMA_tally4F_GET_CGEBRD_NB )
magma_tally4_int_t magma_tally4f_get_cgebrd_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgebrd_nb( *m );
}

#define magma_tally4f_get_chegst_nb FORTRAN_NAME( magma_tally4f_get_chegst_nb, MAGMA_tally4F_GET_CHEGST_NB )
magma_tally4_int_t magma_tally4f_get_chegst_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_chegst_nb( *m );
}

#define magma_tally4f_get_cgesvd_nb FORTRAN_NAME( magma_tally4f_get_cgesvd_nb, MAGMA_tally4F_GET_CGESVD_NB )
magma_tally4_int_t magma_tally4f_get_cgesvd_nb( magma_tally4_int_t *m )
{
    return magma_tally4_get_cgesvd_nb( *m );
}

#define magma_tally4f_get_chegst_nb_m FORTRAN_NAME( magma_tally4f_get_chegst_nb_m, MAGMA_tally4F_GET_CHEGST_NB_M )
magma_tally4_int_t magma_tally4f_get_chegst_nb_m( magma_tally4_int_t *m )
{
    return magma_tally4_get_chegst_nb_m( *m );
}

#define magma_tally4f_get_cbulge_nb FORTRAN_NAME( magma_tally4f_get_cbulge_nb, MAGMA_tally4F_GET_CBULGE_NB )
void magma_tally4f_get_cbulge_nb(
    magma_tally4_int_t *m, magma_tally4_int_t *nbthreads )
{
    magma_tally4_get_cbulge_nb(
        *m, *nbthreads );
}

#define magma_tally4f_cbulge_get_Vblksiz FORTRAN_NAME( magma_tally4f_cbulge_get_Vblksiz, MAGMA_tally4F_CBULGE_GET_VBLKSIZ )
void magma_tally4f_cbulge_get_Vblksiz(
    magma_tally4_int_t *m, magma_tally4_int_t *nb, magma_tally4_int_t *nbthreads )
{
    magma_tally4_cbulge_get_Vblksiz(
        *m, *nb, *nbthreads );
}

#define magma_tally4f_get_cbulge_gcperf FORTRAN_NAME( magma_tally4f_get_cbulge_gcperf, MAGMA_tally4F_GET_CBULGE_GCPERF )
void magma_tally4f_get_cbulge_gcperf(
     )
{
    magma_tally4_get_cbulge_gcperf(
         );
}

#define magma_tally4f_cgebrd FORTRAN_NAME( magma_tally4f_cgebrd, MAGMA_tally4F_CGEBRD )
void magma_tally4f_cgebrd(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *d,
    float *e,
    magma_tally4FloatComplex *tauq,
    magma_tally4FloatComplex *taup,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magma_tally4f_cgeev FORTRAN_NAME( magma_tally4f_cgeev, MAGMA_tally4F_CGEEV )
void magma_tally4f_cgeev(
    const char* jobvl, const char* jobvr, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *w,
    magma_tally4FloatComplex *VL, magma_tally4_int_t *ldvl,
    magma_tally4FloatComplex *VR, magma_tally4_int_t *ldvr,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeev(
        magma_tally4_vec_const(*jobvl), magma_tally4_vec_const(*jobvr), *n,
        A, *lda,
        w,
        VL, *ldvl,
        VR, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally4f_cgehrd FORTRAN_NAME( magma_tally4f_cgehrd, MAGMA_tally4F_CGEHRD )
void magma_tally4f_cgehrd(
    magma_tally4_int_t *n, magma_tally4_int_t *ilo, magma_tally4_int_t *ihi,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    devptr_t *dT,
    magma_tally4_int_t *info )
{
    magma_tally4_cgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        magma_tally4_cdevptr(dT),
        info );
}

#define magma_tally4f_cgehrd2 FORTRAN_NAME( magma_tally4f_cgehrd2, MAGMA_tally4F_CGEHRD2 )
void magma_tally4f_cgehrd2(
    magma_tally4_int_t *n, magma_tally4_int_t *ilo, magma_tally4_int_t *ihi,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgelqf FORTRAN_NAME( magma_tally4f_cgelqf, MAGMA_tally4F_CGELQF )
void magma_tally4f_cgelqf(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgeqlf FORTRAN_NAME( magma_tally4f_cgeqlf, MAGMA_tally4F_CGEQLF )
void magma_tally4f_cgeqlf(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgeqp3 FORTRAN_NAME( magma_tally4f_cgeqp3, MAGMA_tally4F_CGEQP3 )
void magma_tally4f_cgeqp3(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *jpvt,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqp3(
        *m, *n,
        A, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally4f_cgeqrf FORTRAN_NAME( magma_tally4f_cgeqrf, MAGMA_tally4F_CGEQRF )
void magma_tally4f_cgeqrf(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgeqrf_ooc FORTRAN_NAME( magma_tally4f_cgeqrf_ooc, MAGMA_tally4F_CGEQRF_OOC )
void magma_tally4f_cgeqrf_ooc(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgeqrf4 FORTRAN_NAME( magma_tally4f_cgeqrf4, MAGMA_tally4F_CGEQRF4 )
void magma_tally4f_cgeqrf4(
    magma_tally4_int_t *ngpu, magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrf4(
        *ngpu, *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgesdd FORTRAN_NAME( magma_tally4f_cgesdd, MAGMA_tally4F_CGESDD )
void magma_tally4f_cgesdd(
    const char* jobz, magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *s,
    magma_tally4FloatComplex *U, magma_tally4_int_t *ldu,
    magma_tally4FloatComplex *VT, magma_tally4_int_t *ldvt,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *iwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgesdd(
        magma_tally4_vec_const(*jobz), *m, *n,
        A, *lda,
        s,
        U, *ldu,
        VT, *ldvt,
        work, *lwork,
        rwork,
        iwork,
        info );
}

#define magma_tally4f_cgesv FORTRAN_NAME( magma_tally4f_cgesv, MAGMA_tally4F_CGESV )
void magma_tally4f_cgesv(
    magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *ipiv,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    magma_tally4_int_t *info )
{
    magma_tally4_cgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magma_tally4f_cgesv_rbt FORTRAN_NAME( magma_tally4f_cgesv_rbt, MAGMA_tally4F_CGESV_RBT )
void magma_tally4f_cgesv_rbt(
    const char* ref, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    magma_tally4_int_t *info )
{
    magma_tally4_cgesv_rbt(
        magma_tally4_bool_const(*ref), *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally4f_cgesvd FORTRAN_NAME( magma_tally4f_cgesvd, MAGMA_tally4F_CGESVD )
void magma_tally4f_cgesvd(
    const char* jobu, const char* jobvt, magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *s,
    magma_tally4FloatComplex *U, magma_tally4_int_t *ldu,
    magma_tally4FloatComplex *VT, magma_tally4_int_t *ldvt,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgesvd(
        magma_tally4_vec_const(*jobu), magma_tally4_vec_const(*jobvt), *m, *n,
        A, *lda,
        s,
        U, *ldu,
        VT, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally4f_cgetf2_nopiv FORTRAN_NAME( magma_tally4f_cgetf2_nopiv, MAGMA_tally4F_CGETF2_NOPIV )
void magma_tally4f_cgetf2_nopiv(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetf2_nopiv(
        *m, *n,
        A, *lda,
        info );
}

#define magma_tally4f_cgetrf FORTRAN_NAME( magma_tally4f_cgetrf, MAGMA_tally4F_CGETRF )
void magma_tally4f_cgetrf(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally4f_cgetrf_nopiv FORTRAN_NAME( magma_tally4f_cgetrf_nopiv, MAGMA_tally4F_CGETRF_NOPIV )
void magma_tally4f_cgetrf_nopiv(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrf_nopiv(
        *m, *n,
        A, *lda,
        info );
}

#define magma_tally4f_cgetrf_piv FORTRAN_NAME( magma_tally4f_cgetrf_piv, MAGMA_tally4F_CGETRF_PIV )
void magma_tally4f_cgetrf_piv(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *NB,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrf_piv(
        *m, *n, *NB,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally4f_cheevd FORTRAN_NAME( magma_tally4f_cheevd, MAGMA_tally4F_CHEEVD )
void magma_tally4f_cheevd(
    const char* jobz, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevd(
        magma_tally4_vec_const(*jobz), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevdx FORTRAN_NAME( magma_tally4f_cheevdx, MAGMA_tally4F_CHEEVDX )
void magma_tally4f_cheevdx(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevdx(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevdx_2stage FORTRAN_NAME( magma_tally4f_cheevdx_2stage, MAGMA_tally4F_CHEEVDX_2STAGE )
void magma_tally4f_cheevdx_2stage(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevdx_2stage(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevr FORTRAN_NAME( magma_tally4f_cheevr, MAGMA_tally4F_CHEEVR )
void magma_tally4f_cheevr(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu, float *abstol,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *Z, magma_tally4_int_t *ldz,
    magma_tally4_int_t *isuppz,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevr(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevx FORTRAN_NAME( magma_tally4f_cheevx, MAGMA_tally4F_CHEEVX )
void magma_tally4f_cheevx(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu, float *abstol,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *Z, magma_tally4_int_t *ldz,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *iwork,
    magma_tally4_int_t *ifail,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevx(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_tally4f_chegst FORTRAN_NAME( magma_tally4f_chegst, MAGMA_tally4F_CHEGST )
void magma_tally4f_chegst(
    magma_tally4_int_t *itype, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    magma_tally4_int_t *info )
{
    magma_tally4_chegst(
        *itype, magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally4f_chegvd FORTRAN_NAME( magma_tally4f_chegvd, MAGMA_tally4F_CHEGVD )
void magma_tally4f_chegvd(
    magma_tally4_int_t *itype, const char* jobz, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvd(
        *itype, magma_tally4_vec_const(*jobz), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegvdx FORTRAN_NAME( magma_tally4f_chegvdx, MAGMA_tally4F_CHEGVDX )
void magma_tally4f_chegvdx(
    magma_tally4_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvdx(
        *itype, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegvdx_2stage FORTRAN_NAME( magma_tally4f_chegvdx_2stage, MAGMA_tally4F_CHEGVDX_2STAGE )
void magma_tally4f_chegvdx_2stage(
    magma_tally4_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvdx_2stage(
        *itype, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegvr FORTRAN_NAME( magma_tally4f_chegvr, MAGMA_tally4F_CHEGVR )
void magma_tally4f_chegvr(
    magma_tally4_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu, float *abstol,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *Z, magma_tally4_int_t *ldz,
    magma_tally4_int_t *isuppz,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvr(
        *itype, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegvx FORTRAN_NAME( magma_tally4f_chegvx, MAGMA_tally4F_CHEGVX )
void magma_tally4f_chegvx(
    magma_tally4_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu, float *abstol,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *Z, magma_tally4_int_t *ldz,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *iwork,
    magma_tally4_int_t *ifail,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvx(
        *itype, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        Z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_tally4f_chesv FORTRAN_NAME( magma_tally4f_chesv, MAGMA_tally4F_CHESV )
void magma_tally4f_chesv(
    const char* uplo, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *ipiv,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    magma_tally4_int_t *info )
{
    magma_tally4_chesv(
        magma_tally4_uplo_const(*uplo), *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magma_tally4f_chetrd FORTRAN_NAME( magma_tally4f_chetrd, MAGMA_tally4F_CHETRD )
void magma_tally4f_chetrd(
    const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *d,
    float *e,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrd(
        magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_chetrf FORTRAN_NAME( magma_tally4f_chetrf, MAGMA_tally4F_CHETRF )
void magma_tally4f_chetrf(
    const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrf(
        magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally4f_chetrf_nopiv FORTRAN_NAME( magma_tally4f_chetrf_nopiv, MAGMA_tally4F_CHETRF_NOPIV )
void magma_tally4f_chetrf_nopiv(
    const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *a, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrf_nopiv(
        magma_tally4_uplo_const(*uplo), *n,
        a, *lda,
        info );
}

#define magma_tally4f_chetrd_hb2st FORTRAN_NAME( magma_tally4f_chetrd_hb2st, MAGMA_tally4F_CHETRD_HB2ST )
void magma_tally4f_chetrd_hb2st(
    const char* uplo, magma_tally4_int_t *n, magma_tally4_int_t *nb, magma_tally4_int_t *Vblksiz,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *d,
    float *e,
    magma_tally4FloatComplex *V, magma_tally4_int_t *ldv,
    magma_tally4FloatComplex *TAU, magma_tally4_int_t *compT,
    magma_tally4FloatComplex *T, magma_tally4_int_t *ldt )
{
    magma_tally4_chetrd_hb2st(
        magma_tally4_uplo_const(*uplo), *n, *nb, *Vblksiz,
        A, *lda,
        d,
        e,
        V, *ldv,
        TAU, *compT,
        T, *ldt );
}

#define magma_tally4f_chetrd_he2hb FORTRAN_NAME( magma_tally4f_chetrd_he2hb, MAGMA_tally4F_CHETRD_HE2HB )
void magma_tally4f_chetrd_he2hb(
    const char* uplo, magma_tally4_int_t *n, magma_tally4_int_t *nb,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    devptr_t *dT,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrd_he2hb(
        magma_tally4_uplo_const(*uplo), *n, *nb,
        A, *lda,
        tau,
        work, *lwork,
        magma_tally4_cdevptr(dT),
        info );
}

#define magma_tally4f_clatrsd FORTRAN_NAME( magma_tally4f_clatrsd, MAGMA_tally4F_CLATRSD )
void magma_tally4f_clatrsd(
    const char* uplo, const char* trans, const char* diag, const char* normin, magma_tally4_int_t *n,
    const magma_tally4FloatComplex *A, magma_tally4_int_t *lda, magma_tally4FloatComplex *lambda,
    magma_tally4FloatComplex *x,
    float *scale,
    float *cnorm,
    magma_tally4_int_t *info )
{
    magma_tally4_clatrsd(
        magma_tally4_uplo_const(*uplo), magma_tally4_trans_const(*trans), magma_tally4_diag_const(*diag), magma_tally4_bool_const(*normin), *n,
        A, *lda, *lambda,
        x,
        scale,
        cnorm,
        info );
}

#define magma_tally4f_clauum FORTRAN_NAME( magma_tally4f_clauum, MAGMA_tally4F_CLAUUM )
void magma_tally4f_clauum(
    const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_clauum(
        magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally4f_cposv FORTRAN_NAME( magma_tally4f_cposv, MAGMA_tally4F_CPOSV )
void magma_tally4f_cposv(
    const char* uplo, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    magma_tally4_int_t *info )
{
    magma_tally4_cposv(
        magma_tally4_uplo_const(*uplo), *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally4f_cpotrf FORTRAN_NAME( magma_tally4f_cpotrf, MAGMA_tally4F_CPOTRF )
void magma_tally4f_cpotrf(
    const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotrf(
        magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally4f_cpotri FORTRAN_NAME( magma_tally4f_cpotri, MAGMA_tally4F_CPOTRI )
void magma_tally4f_cpotri(
    const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotri(
        magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally4f_cstedx FORTRAN_NAME( magma_tally4f_cstedx, MAGMA_tally4F_CSTEDX )
void magma_tally4f_cstedx(
    const char* range, magma_tally4_int_t *n, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    float *d,
    float *e,
    magma_tally4FloatComplex *Z, magma_tally4_int_t *ldz,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    devptr_t *dwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cstedx(
        magma_tally4_range_const(*range), *n, *vl, *vu, *il, *iu,
        d,
        e,
        Z, *ldz,
        rwork, *lrwork,
        iwork, *liwork,
        magma_tally4_sdevptr(dwork),
        info );
}

#define magma_tally4f_ctrevc3 FORTRAN_NAME( magma_tally4f_ctrevc3, MAGMA_tally4F_CTREVC3 )
void magma_tally4f_ctrevc3(
    const char* side, const char* howmany,
    magma_tally4_int_t *select, magma_tally4_int_t *n,
    magma_tally4FloatComplex *T, magma_tally4_int_t *ldt,
    magma_tally4FloatComplex *VL, magma_tally4_int_t *ldvl,
    magma_tally4FloatComplex *VR, magma_tally4_int_t *ldvr, magma_tally4_int_t *mm,
    magma_tally4_int_t *mout,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_ctrevc3(
        magma_tally4_side_const(*side), magma_tally4_vec_const(*howmany),
        select, *n,
        T, *ldt,
        VL, *ldvl,
        VR, *ldvr, *mm,
        mout,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally4f_ctrevc3_mt FORTRAN_NAME( magma_tally4f_ctrevc3_mt, MAGMA_tally4F_CTREVC3_MT )
void magma_tally4f_ctrevc3_mt(
    const char* side, const char* howmany,
    magma_tally4_int_t *select, magma_tally4_int_t *n,
    magma_tally4FloatComplex *T, magma_tally4_int_t *ldt,
    magma_tally4FloatComplex *VL, magma_tally4_int_t *ldvl,
    magma_tally4FloatComplex *VR, magma_tally4_int_t *ldvr, magma_tally4_int_t *mm,
    magma_tally4_int_t *mout,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_ctrevc3_mt(
        magma_tally4_side_const(*side), magma_tally4_vec_const(*howmany),
        select, *n,
        T, *ldt,
        VL, *ldvl,
        VR, *ldvr, *mm,
        mout,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally4f_ctrtri FORTRAN_NAME( magma_tally4f_ctrtri, MAGMA_tally4F_CTRTRI )
void magma_tally4f_ctrtri(
    const char* uplo, const char* diag, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_ctrtri(
        magma_tally4_uplo_const(*uplo), magma_tally4_diag_const(*diag), *n,
        A, *lda,
        info );
}

#define magma_tally4f_cunghr FORTRAN_NAME( magma_tally4f_cunghr, MAGMA_tally4F_CUNGHR )
void magma_tally4f_cunghr(
    magma_tally4_int_t *n, magma_tally4_int_t *ilo, magma_tally4_int_t *ihi,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT, magma_tally4_int_t *nb,
    magma_tally4_int_t *info )
{
    magma_tally4_cunghr(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        magma_tally4_cdevptr(dT), *nb,
        info );
}

#define magma_tally4f_cungqr FORTRAN_NAME( magma_tally4f_cungqr, MAGMA_tally4F_CUNGQR )
void magma_tally4f_cungqr(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT, magma_tally4_int_t *nb,
    magma_tally4_int_t *info )
{
    magma_tally4_cungqr(
        *m, *n, *k,
        A, *lda,
        tau,
        magma_tally4_cdevptr(dT), *nb,
        info );
}

#define magma_tally4f_cungqr2 FORTRAN_NAME( magma_tally4f_cungqr2, MAGMA_tally4F_CUNGQR2 )
void magma_tally4f_cungqr2(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4_int_t *info )
{
    magma_tally4_cungqr2(
        *m, *n, *k,
        A, *lda,
        tau,
        info );
}

#define magma_tally4f_cunmbr FORTRAN_NAME( magma_tally4f_cunmbr, MAGMA_tally4F_CUNMBR )
void magma_tally4f_cunmbr(
    const char* vect, const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmbr(
        magma_tally4_vect_const(*vect), magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cunmlq FORTRAN_NAME( magma_tally4f_cunmlq, MAGMA_tally4F_CUNMLQ )
void magma_tally4f_cunmlq(
    const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmlq(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cunmql FORTRAN_NAME( magma_tally4f_cunmql, MAGMA_tally4F_CUNMQL )
void magma_tally4f_cunmql(
    const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmql(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cunmqr FORTRAN_NAME( magma_tally4f_cunmqr, MAGMA_tally4F_CUNMQR )
void magma_tally4f_cunmqr(
    const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmqr(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cunmtr FORTRAN_NAME( magma_tally4f_cunmtr, MAGMA_tally4F_CUNMTR )
void magma_tally4f_cunmtr(
    const char* side, const char* uplo, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmtr(
        magma_tally4_side_const(*side), magma_tally4_uplo_const(*uplo), magma_tally4_trans_const(*trans), *m, *n,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cgeev_m FORTRAN_NAME( magma_tally4f_cgeev_m, MAGMA_tally4F_CGEEV_M )
void magma_tally4f_cgeev_m(
    const char* jobvl, const char* jobvr, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *w,
    magma_tally4FloatComplex *VL, magma_tally4_int_t *ldvl,
    magma_tally4FloatComplex *VR, magma_tally4_int_t *ldvr,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeev_m(
        magma_tally4_vec_const(*jobvl), magma_tally4_vec_const(*jobvr), *n,
        A, *lda,
        w,
        VL, *ldvl,
        VR, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magma_tally4f_cgehrd_m FORTRAN_NAME( magma_tally4f_cgehrd_m, MAGMA_tally4F_CGEHRD_M )
void magma_tally4f_cgehrd_m(
    magma_tally4_int_t *n, magma_tally4_int_t *ilo, magma_tally4_int_t *ihi,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4FloatComplex *T,
    magma_tally4_int_t *info )
{
    magma_tally4_cgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magma_tally4f_cgetrf_m FORTRAN_NAME( magma_tally4f_cgetrf_m, MAGMA_tally4F_CGETRF_M )
void magma_tally4f_cgetrf_m(
    magma_tally4_int_t *ngpu, magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrf_m(
        *ngpu, *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magma_tally4f_cheevd_m FORTRAN_NAME( magma_tally4f_cheevd_m, MAGMA_tally4F_CHEEVD_M )
void magma_tally4f_cheevd_m(
    magma_tally4_int_t *ngpu, const char* jobz, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevd_m(
        *ngpu, magma_tally4_vec_const(*jobz), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevdx_2stage_m FORTRAN_NAME( magma_tally4f_cheevdx_2stage_m, MAGMA_tally4F_CHEEVDX_2STAGE_M )
void magma_tally4f_cheevdx_2stage_m(
    magma_tally4_int_t *ngpu, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevdx_2stage_m(
        *ngpu, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevdx_m FORTRAN_NAME( magma_tally4f_cheevdx_m, MAGMA_tally4F_CHEEVDX_M )
void magma_tally4f_cheevdx_m(
    magma_tally4_int_t *ngpu, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevdx_m(
        *ngpu, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegst_m FORTRAN_NAME( magma_tally4f_chegst_m, MAGMA_tally4F_CHEGST_M )
void magma_tally4f_chegst_m(
    magma_tally4_int_t *ngpu, magma_tally4_int_t *itype, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    magma_tally4_int_t *info )
{
    magma_tally4_chegst_m(
        *ngpu, *itype, magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        info );
}

#define magma_tally4f_chegvd_m FORTRAN_NAME( magma_tally4f_chegvd_m, MAGMA_tally4F_CHEGVD_M )
void magma_tally4f_chegvd_m(
    magma_tally4_int_t *ngpu, magma_tally4_int_t *itype, const char* jobz, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvd_m(
        *ngpu, *itype, magma_tally4_vec_const(*jobz), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegvdx_2stage_m FORTRAN_NAME( magma_tally4f_chegvdx_2stage_m, MAGMA_tally4F_CHEGVDX_2STAGE_M )
void magma_tally4f_chegvdx_2stage_m(
    magma_tally4_int_t *ngpu, magma_tally4_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvdx_2stage_m(
        *ngpu, *itype, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_chegvdx_m FORTRAN_NAME( magma_tally4f_chegvdx_m, MAGMA_tally4F_CHEGVDX_M )
void magma_tally4f_chegvdx_m(
    magma_tally4_int_t *ngpu, magma_tally4_int_t *itype, const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chegvdx_m(
        *ngpu, *itype, magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        B, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cpotrf_m FORTRAN_NAME( magma_tally4f_cpotrf_m, MAGMA_tally4F_CPOTRF_M )
void magma_tally4f_cpotrf_m(
    magma_tally4_int_t *ngpu, const char* uplo, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotrf_m(
        *ngpu, magma_tally4_uplo_const(*uplo), *n,
        A, *lda,
        info );
}

#define magma_tally4f_cstedx_m FORTRAN_NAME( magma_tally4f_cstedx_m, MAGMA_tally4F_CSTEDX_M )
void magma_tally4f_cstedx_m(
    magma_tally4_int_t *ngpu, const char* range, magma_tally4_int_t *n, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    float *d,
    float *e,
    magma_tally4FloatComplex *Z, magma_tally4_int_t *ldz,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cstedx_m(
        *ngpu, magma_tally4_range_const(*range), *n, *vl, *vu, *il, *iu,
        d,
        e,
        Z, *ldz,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_ctrsm_m FORTRAN_NAME( magma_tally4f_ctrsm_m, MAGMA_tally4F_CTRSM_M )
void magma_tally4f_ctrsm_m(
    magma_tally4_int_t *ngpu, const char* side, const char* uplo, const char* transa, const char* diag, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4FloatComplex *alpha,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *B, magma_tally4_int_t *ldb )
{
    magma_tally4_ctrsm_m(
        *ngpu, magma_tally4_side_const(*side), magma_tally4_uplo_const(*uplo), magma_tally4_trans_const(*transa), magma_tally4_diag_const(*diag), *m, *n, *alpha,
        A, *lda,
        B, *ldb );
}

#define magma_tally4f_cunghr_m FORTRAN_NAME( magma_tally4f_cunghr_m, MAGMA_tally4F_CUNGHR_M )
void magma_tally4f_cunghr_m(
    magma_tally4_int_t *n, magma_tally4_int_t *ilo, magma_tally4_int_t *ihi,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *T, magma_tally4_int_t *nb,
    magma_tally4_int_t *info )
{
    magma_tally4_cunghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magma_tally4f_cungqr_m FORTRAN_NAME( magma_tally4f_cungqr_m, MAGMA_tally4F_CUNGQR_M )
void magma_tally4f_cungqr_m(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *T, magma_tally4_int_t *nb,
    magma_tally4_int_t *info )
{
    magma_tally4_cungqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magma_tally4f_cunmqr_m FORTRAN_NAME( magma_tally4f_cunmqr_m, MAGMA_tally4F_CUNMQR_M )
void magma_tally4f_cunmqr_m(
    magma_tally4_int_t *ngpu, const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmqr_m(
        *ngpu, magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cunmtr_m FORTRAN_NAME( magma_tally4f_cunmtr_m, MAGMA_tally4F_CUNMTR_M )
void magma_tally4f_cunmtr_m(
    magma_tally4_int_t *ngpu, const char* side, const char* uplo, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n,
    magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *C, magma_tally4_int_t *ldc,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmtr_m(
        *ngpu, magma_tally4_side_const(*side), magma_tally4_uplo_const(*uplo), magma_tally4_trans_const(*trans), *m, *n,
        A, *lda,
        tau,
        C, *ldc,
        work, *lwork,
        info );
}

#define magma_tally4f_cgegqr_gpu FORTRAN_NAME( magma_tally4f_cgegqr_gpu, MAGMA_tally4F_CGEGQR_GPU )
void magma_tally4f_cgegqr_gpu(
    magma_tally4_int_t *ikind, magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dwork,
    magma_tally4FloatComplex *work,
    magma_tally4_int_t *info )
{
    magma_tally4_cgegqr_gpu(
        *ikind, *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dwork),
        work,
        info );
}

#define magma_tally4f_cgelqf_gpu FORTRAN_NAME( magma_tally4f_cgelqf_gpu, MAGMA_tally4F_CGELQF_GPU )
void magma_tally4f_cgelqf_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgelqf_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magma_tally4f_cgels_gpu FORTRAN_NAME( magma_tally4f_cgels_gpu, MAGMA_tally4F_CGELS_GPU )
void magma_tally4f_cgels_gpu(
    const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4FloatComplex *hwork, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgels_gpu(
        magma_tally4_trans_const(*trans), *m, *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally4f_cgels3_gpu FORTRAN_NAME( magma_tally4f_cgels3_gpu, MAGMA_tally4F_CGELS3_GPU )
void magma_tally4f_cgels3_gpu(
    const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4FloatComplex *hwork, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgels3_gpu(
        magma_tally4_trans_const(*trans), *m, *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally4f_cgeqp3_gpu FORTRAN_NAME( magma_tally4f_cgeqp3_gpu, MAGMA_tally4F_CGEQP3_GPU )
void magma_tally4f_cgeqp3_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *jpvt,
    magma_tally4FloatComplex *tau,
    devptr_t *dwork, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqp3_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        jpvt,
        tau,
        magma_tally4_cdevptr(dwork), *lwork,
        rwork,
        info );
}

#define magma_tally4f_cgeqr2x_gpu FORTRAN_NAME( magma_tally4f_cgeqr2x_gpu, MAGMA_tally4F_CGEQR2X_GPU )
void magma_tally4f_cgeqr2x_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqr2x_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dtau),
        magma_tally4_cdevptr(dT),
        magma_tally4_cdevptr(ddA),
        magma_tally4_sdevptr(dwork),
        info );
}

#define magma_tally4f_cgeqr2x2_gpu FORTRAN_NAME( magma_tally4f_cgeqr2x2_gpu, MAGMA_tally4F_CGEQR2X2_GPU )
void magma_tally4f_cgeqr2x2_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqr2x2_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dtau),
        magma_tally4_cdevptr(dT),
        magma_tally4_cdevptr(ddA),
        magma_tally4_sdevptr(dwork),
        info );
}

#define magma_tally4f_cgeqr2x3_gpu FORTRAN_NAME( magma_tally4f_cgeqr2x3_gpu, MAGMA_tally4F_CGEQR2X3_GPU )
void magma_tally4f_cgeqr2x3_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqr2x3_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dtau),
        magma_tally4_cdevptr(dT),
        magma_tally4_cdevptr(ddA),
        magma_tally4_sdevptr(dwork),
        info );
}

#define magma_tally4f_cgeqr2x4_gpu FORTRAN_NAME( magma_tally4f_cgeqr2x4_gpu, MAGMA_tally4F_CGEQR2X4_GPU )
void magma_tally4f_cgeqr2x4_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dtau,
    devptr_t *dT,
    devptr_t *ddA,
    devptr_t *dwork, magma_tally4_queue_t *queue,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqr2x4_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dtau),
        magma_tally4_cdevptr(dT),
        magma_tally4_cdevptr(ddA),
        magma_tally4_sdevptr(dwork), *queue,
        info );
}

#define magma_tally4f_cgeqrf_gpu FORTRAN_NAME( magma_tally4f_cgeqrf_gpu, MAGMA_tally4F_CGEQRF_GPU )
void magma_tally4f_cgeqrf_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrf_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dT),
        info );
}

#define magma_tally4f_cgeqrf2_gpu FORTRAN_NAME( magma_tally4f_cgeqrf2_gpu, MAGMA_tally4F_CGEQRF2_GPU )
void magma_tally4f_cgeqrf2_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrf2_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        info );
}

#define magma_tally4f_cgeqrf3_gpu FORTRAN_NAME( magma_tally4f_cgeqrf3_gpu, MAGMA_tally4F_CGEQRF3_GPU )
void magma_tally4f_cgeqrf3_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrf3_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dT),
        info );
}

#define magma_tally4f_cgeqrs_gpu FORTRAN_NAME( magma_tally4f_cgeqrs_gpu, MAGMA_tally4F_CGEQRS_GPU )
void magma_tally4f_cgeqrs_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4FloatComplex *hwork, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrs_gpu(
        *m, *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dT),
        magma_tally4_cdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally4f_cgeqrs3_gpu FORTRAN_NAME( magma_tally4f_cgeqrs3_gpu, MAGMA_tally4F_CGEQRS3_GPU )
void magma_tally4f_cgeqrs3_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4FloatComplex *hwork, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgeqrs3_gpu(
        *m, *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dT),
        magma_tally4_cdevptr(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magma_tally4f_cgerbt_gpu FORTRAN_NAME( magma_tally4f_cgerbt_gpu, MAGMA_tally4F_CGERBT_GPU )
void magma_tally4f_cgerbt_gpu(
    const char* gen, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4FloatComplex *U,
    magma_tally4FloatComplex *V,
    magma_tally4_int_t *info )
{
    magma_tally4_cgerbt_gpu(
        magma_tally4_bool_const(*gen), *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        U,
        V,
        info );
}

#define magma_tally4f_cgessm_gpu FORTRAN_NAME( magma_tally4f_cgessm_gpu, MAGMA_tally4F_CGESSM_GPU )
void magma_tally4f_cgessm_gpu(
    const char* order, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k, magma_tally4_int_t *ib,
    magma_tally4_int_t *ipiv,
    devptr_t *dL1, magma_tally4_int_t *lddl1,
    devptr_t *dL, magma_tally4_int_t *lddl,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_cgessm_gpu(
        magma_tally4_order_const(*order), *m, *n, *k, *ib,
        ipiv,
        magma_tally4_cdevptr(dL1), *lddl1,
        magma_tally4_cdevptr(dL), *lddl,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cgesv_gpu FORTRAN_NAME( magma_tally4f_cgesv_gpu, MAGMA_tally4F_CGESV_GPU )
void magma_tally4f_cgesv_gpu(
    magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *ipiv,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_cgesv_gpu(
        *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        ipiv,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_cgesv_nopiv_gpu FORTRAN_NAME( magma_tally4f_cgesv_nopiv_gpu, MAGMA_tally4F_CGESV_NOPIV_GPU )
void magma_tally4f_cgesv_nopiv_gpu(
    magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_cgesv_nopiv_gpu(
        *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_cgetf2_gpu FORTRAN_NAME( magma_tally4f_cgetf2_gpu, MAGMA_tally4F_CGETF2_GPU )
void magma_tally4f_cgetf2_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetf2_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        ipiv,
        info );
}

#define magma_tally4f_cgetrf_gpu FORTRAN_NAME( magma_tally4f_cgetrf_gpu, MAGMA_tally4F_CGETRF_GPU )
void magma_tally4f_cgetrf_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrf_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        ipiv,
        info );
}

#define magma_tally4f_cgetrf_nopiv_gpu FORTRAN_NAME( magma_tally4f_cgetrf_nopiv_gpu, MAGMA_tally4F_CGETRF_NOPIV_GPU )
void magma_tally4f_cgetrf_nopiv_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrf_nopiv_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cgetri_gpu FORTRAN_NAME( magma_tally4f_cgetri_gpu, MAGMA_tally4F_CGETRI_GPU )
void magma_tally4f_cgetri_gpu(
    magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *ipiv,
    devptr_t *dwork, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetri_gpu(
        *n,
        magma_tally4_cdevptr(dA), *ldda,
        ipiv,
        magma_tally4_cdevptr(dwork), *lwork,
        info );
}

#define magma_tally4f_cgetrs_gpu FORTRAN_NAME( magma_tally4f_cgetrs_gpu, MAGMA_tally4F_CGETRS_GPU )
void magma_tally4f_cgetrs_gpu(
    const char* trans, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *ipiv,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrs_gpu(
        magma_tally4_trans_const(*trans), *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        ipiv,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_cgetrs_nopiv_gpu FORTRAN_NAME( magma_tally4f_cgetrs_nopiv_gpu, MAGMA_tally4F_CGETRS_NOPIV_GPU )
void magma_tally4f_cgetrs_nopiv_gpu(
    const char* trans, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_cgetrs_nopiv_gpu(
        magma_tally4_trans_const(*trans), *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_cheevd_gpu FORTRAN_NAME( magma_tally4f_cheevd_gpu, MAGMA_tally4F_CHEEVD_GPU )
void magma_tally4f_cheevd_gpu(
    const char* jobz, const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    float *w,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevd_gpu(
        magma_tally4_vec_const(*jobz), magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        w,
        wA, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevdx_gpu FORTRAN_NAME( magma_tally4f_cheevdx_gpu, MAGMA_tally4F_CHEEVDX_GPU )
void magma_tally4f_cheevdx_gpu(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu,
    magma_tally4_int_t *m,
    float *w,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevdx_gpu(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wA, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevr_gpu FORTRAN_NAME( magma_tally4f_cheevr_gpu, MAGMA_tally4F_CHEEVR_GPU )
void magma_tally4f_cheevr_gpu(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu, float *abstol,
    magma_tally4_int_t *m,
    float *w,
    devptr_t *dZ, magma_tally4_int_t *lddz,
    magma_tally4_int_t *isuppz,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4FloatComplex *wZ, magma_tally4_int_t *ldwz,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork, magma_tally4_int_t *lrwork,
    magma_tally4_int_t *iwork, magma_tally4_int_t *liwork,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevr_gpu(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        magma_tally4_cdevptr(dZ), *lddz,
        isuppz,
        wA, *ldwa,
        wZ, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magma_tally4f_cheevx_gpu FORTRAN_NAME( magma_tally4f_cheevx_gpu, MAGMA_tally4F_CHEEVX_GPU )
void magma_tally4f_cheevx_gpu(
    const char* jobz, const char* range, const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda, float *vl, float *vu, magma_tally4_int_t *il, magma_tally4_int_t *iu, float *abstol,
    magma_tally4_int_t *m,
    float *w,
    devptr_t *dZ, magma_tally4_int_t *lddz,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4FloatComplex *wZ, magma_tally4_int_t *ldwz,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    float *rwork,
    magma_tally4_int_t *iwork,
    magma_tally4_int_t *ifail,
    magma_tally4_int_t *info )
{
    magma_tally4_cheevx_gpu(
        magma_tally4_vec_const(*jobz), magma_tally4_range_const(*range), magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        magma_tally4_cdevptr(dZ), *lddz,
        wA, *ldwa,
        wZ, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magma_tally4f_chegst_gpu FORTRAN_NAME( magma_tally4f_chegst_gpu, MAGMA_tally4F_CHEGST_GPU )
void magma_tally4f_chegst_gpu(
    magma_tally4_int_t *itype, const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_chegst_gpu(
        *itype, magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_chetrd_gpu FORTRAN_NAME( magma_tally4f_chetrd_gpu, MAGMA_tally4F_CHETRD_GPU )
void magma_tally4f_chetrd_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    float *d,
    float *e,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrd_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        d,
        e,
        tau,
        wA, *ldwa,
        work, *lwork,
        info );
}

#define magma_tally4f_chetrd2_gpu FORTRAN_NAME( magma_tally4f_chetrd2_gpu, MAGMA_tally4F_CHETRD2_GPU )
void magma_tally4f_chetrd2_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    float *d,
    float *e,
    magma_tally4FloatComplex *tau,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4FloatComplex *work, magma_tally4_int_t *lwork,
    devptr_t *dwork, magma_tally4_int_t *ldwork,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrd2_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        d,
        e,
        tau,
        wA, *ldwa,
        work, *lwork,
        magma_tally4_cdevptr(dwork), *ldwork,
        info );
}

#define magma_tally4f_chetrf_nopiv_gpu FORTRAN_NAME( magma_tally4f_chetrf_nopiv_gpu, MAGMA_tally4F_CHETRF_NOPIV_GPU )
void magma_tally4f_chetrf_nopiv_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *da, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_chetrf_nopiv_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(da), *ldda,
        info );
}

#define magma_tally4f_clarf_gpu FORTRAN_NAME( magma_tally4f_clarf_gpu, MAGMA_tally4F_CLARF_GPU )
void magma_tally4f_clarf_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dv,
    devptr_t *dtau,
    devptr_t *dC, magma_tally4_int_t *lddc )
{
    magma_tally4_clarf_gpu(
        *m, *n,
        magma_tally4_cdevptr(dv),
        magma_tally4_cdevptr(dtau),
        magma_tally4_cdevptr(dC), *lddc );
}

#define magma_tally4f_clarfb_gpu FORTRAN_NAME( magma_tally4f_clarfb_gpu, MAGMA_tally4F_CLARFB_GPU )
void magma_tally4f_clarfb_gpu(
    const char* side, const char* trans, const char* direct, const char* storev, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dV, magma_tally4_int_t *lddv,
    devptr_t *dT, magma_tally4_int_t *lddt,
    devptr_t *dC, magma_tally4_int_t *lddc,
    devptr_t *dwork, magma_tally4_int_t *ldwork )
{
    magma_tally4_clarfb_gpu(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), magma_tally4_direct_const(*direct), magma_tally4_storev_const(*storev), *m, *n, *k,
        magma_tally4_cdevptr(dV), *lddv,
        magma_tally4_cdevptr(dT), *lddt,
        magma_tally4_cdevptr(dC), *lddc,
        magma_tally4_cdevptr(dwork), *ldwork );
}

#define magma_tally4f_clarfb_gpu_gemm FORTRAN_NAME( magma_tally4f_clarfb_gpu_gemm, MAGMA_tally4F_CLARFB_GPU_GEMM )
void magma_tally4f_clarfb_gpu_gemm(
    const char* side, const char* trans, const char* direct, const char* storev, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dV, magma_tally4_int_t *lddv,
    devptr_t *dT, magma_tally4_int_t *lddt,
    devptr_t *dC, magma_tally4_int_t *lddc,
    devptr_t *dwork, magma_tally4_int_t *ldwork,
    devptr_t *dworkvt, magma_tally4_int_t *ldworkvt )
{
    magma_tally4_clarfb_gpu_gemm(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), magma_tally4_direct_const(*direct), magma_tally4_storev_const(*storev), *m, *n, *k,
        magma_tally4_cdevptr(dV), *lddv,
        magma_tally4_cdevptr(dT), *lddt,
        magma_tally4_cdevptr(dC), *lddc,
        magma_tally4_cdevptr(dwork), *ldwork,
        magma_tally4_cdevptr(dworkvt), *ldworkvt );
}

#define magma_tally4f_clarfb2_gpu FORTRAN_NAME( magma_tally4f_clarfb2_gpu, MAGMA_tally4F_CLARFB2_GPU )
void magma_tally4f_clarfb2_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dV, magma_tally4_int_t *lddv,
    devptr_t *dT, magma_tally4_int_t *lddt,
    devptr_t *dC, magma_tally4_int_t *lddc,
    devptr_t *dwork, magma_tally4_int_t *ldwork )
{
    magma_tally4_clarfb2_gpu(
        *m, *n, *k,
        magma_tally4_cdevptr(dV), *lddv,
        magma_tally4_cdevptr(dT), *lddt,
        magma_tally4_cdevptr(dC), *lddc,
        magma_tally4_cdevptr(dwork), *ldwork );
}

#define magma_tally4f_clauum_gpu FORTRAN_NAME( magma_tally4f_clauum_gpu, MAGMA_tally4F_CLAUUM_GPU )
void magma_tally4f_clauum_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_clauum_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cposv_gpu FORTRAN_NAME( magma_tally4f_cposv_gpu, MAGMA_tally4F_CPOSV_GPU )
void magma_tally4f_cposv_gpu(
    const char* uplo, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_cposv_gpu(
        magma_tally4_uplo_const(*uplo), *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_cpotf2_gpu FORTRAN_NAME( magma_tally4f_cpotf2_gpu, MAGMA_tally4F_CPOTF2_GPU )
void magma_tally4f_cpotf2_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotf2_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cpotrf_gpu FORTRAN_NAME( magma_tally4f_cpotrf_gpu, MAGMA_tally4F_CPOTRF_GPU )
void magma_tally4f_cpotrf_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotrf_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cpotri_gpu FORTRAN_NAME( magma_tally4f_cpotri_gpu, MAGMA_tally4F_CPOTRI_GPU )
void magma_tally4f_cpotri_gpu(
    const char* uplo, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotri_gpu(
        magma_tally4_uplo_const(*uplo), *n,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cpotrs_gpu FORTRAN_NAME( magma_tally4f_cpotrs_gpu, MAGMA_tally4F_CPOTRS_GPU )
void magma_tally4f_cpotrs_gpu(
    const char* uplo, magma_tally4_int_t *n, magma_tally4_int_t *nrhs,
    devptr_t *dA, magma_tally4_int_t *ldda,
    devptr_t *dB, magma_tally4_int_t *lddb,
    magma_tally4_int_t *info )
{
    magma_tally4_cpotrs_gpu(
        magma_tally4_uplo_const(*uplo), *n, *nrhs,
        magma_tally4_cdevptr(dA), *ldda,
        magma_tally4_cdevptr(dB), *lddb,
        info );
}

#define magma_tally4f_cssssm_gpu FORTRAN_NAME( magma_tally4f_cssssm_gpu, MAGMA_tally4F_CSSSSM_GPU )
void magma_tally4f_cssssm_gpu(
    const char* order, magma_tally4_int_t *m1, magma_tally4_int_t *n1, magma_tally4_int_t *m2, magma_tally4_int_t *n2, magma_tally4_int_t *k, magma_tally4_int_t *ib,
    devptr_t *dA1, magma_tally4_int_t *ldda1,
    devptr_t *dA2, magma_tally4_int_t *ldda2,
    devptr_t *dL1, magma_tally4_int_t *lddl1,
    devptr_t *dL2, magma_tally4_int_t *lddl2,
    magma_tally4_int_t *ipiv,
    magma_tally4_int_t *info )
{
    magma_tally4_cssssm_gpu(
        magma_tally4_order_const(*order), *m1, *n1, *m2, *n2, *k, *ib,
        magma_tally4_cdevptr(dA1), *ldda1,
        magma_tally4_cdevptr(dA2), *ldda2,
        magma_tally4_cdevptr(dL1), *lddl1,
        magma_tally4_cdevptr(dL2), *lddl2,
        ipiv,
        info );
}

#define magma_tally4f_ctrtri_gpu FORTRAN_NAME( magma_tally4f_ctrtri_gpu, MAGMA_tally4F_CTRTRI_GPU )
void magma_tally4f_ctrtri_gpu(
    const char* uplo, const char* diag, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *info )
{
    magma_tally4_ctrtri_gpu(
        magma_tally4_uplo_const(*uplo), magma_tally4_diag_const(*diag), *n,
        magma_tally4_cdevptr(dA), *ldda,
        info );
}

#define magma_tally4f_cungqr_gpu FORTRAN_NAME( magma_tally4f_cungqr_gpu, MAGMA_tally4F_CUNGQR_GPU )
void magma_tally4f_cungqr_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dT, magma_tally4_int_t *nb,
    magma_tally4_int_t *info )
{
    magma_tally4_cungqr_gpu(
        *m, *n, *k,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dT), *nb,
        info );
}

#define magma_tally4f_cunmql2_gpu FORTRAN_NAME( magma_tally4f_cunmql2_gpu, MAGMA_tally4F_CUNMQL2_GPU )
void magma_tally4f_cunmql2_gpu(
    const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dC, magma_tally4_int_t *lddc,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmql2_gpu(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_tally4f_cunmqr_gpu FORTRAN_NAME( magma_tally4f_cunmqr_gpu, MAGMA_tally4F_CUNMQR_GPU )
void magma_tally4f_cunmqr_gpu(
    const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dC, magma_tally4_int_t *lddc,
    magma_tally4FloatComplex *hwork, magma_tally4_int_t *lwork,
    devptr_t *dT, magma_tally4_int_t *nb,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmqr_gpu(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dC), *lddc,
        hwork, *lwork,
        magma_tally4_cdevptr(dT), *nb,
        info );
}

#define magma_tally4f_cunmqr2_gpu FORTRAN_NAME( magma_tally4f_cunmqr2_gpu, MAGMA_tally4F_CUNMQR2_GPU )
void magma_tally4f_cunmqr2_gpu(
    const char* side, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n, magma_tally4_int_t *k,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dC, magma_tally4_int_t *lddc,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmqr2_gpu(
        magma_tally4_side_const(*side), magma_tally4_trans_const(*trans), *m, *n, *k,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_tally4f_cunmtr_gpu FORTRAN_NAME( magma_tally4f_cunmtr_gpu, MAGMA_tally4F_CUNMTR_GPU )
void magma_tally4f_cunmtr_gpu(
    const char* side, const char* uplo, const char* trans, magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4FloatComplex *tau,
    devptr_t *dC, magma_tally4_int_t *lddc,
    magma_tally4FloatComplex *wA, magma_tally4_int_t *ldwa,
    magma_tally4_int_t *info )
{
    magma_tally4_cunmtr_gpu(
        magma_tally4_side_const(*side), magma_tally4_uplo_const(*uplo), magma_tally4_trans_const(*trans), *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        tau,
        magma_tally4_cdevptr(dC), *lddc,
        wA, *ldwa,
        info );
}

#define magma_tally4f_cnan_inf FORTRAN_NAME( magma_tally4f_cnan_inf, MAGMA_tally4F_CNAN_INF )
void magma_tally4f_cnan_inf(
    const char* uplo, magma_tally4_int_t *m, magma_tally4_int_t *n,
    const magma_tally4FloatComplex *A, magma_tally4_int_t *lda,
    magma_tally4_int_t *cnt_nan,
    magma_tally4_int_t *cnt_inf )
{
    magma_tally4_cnan_inf(
        magma_tally4_uplo_const(*uplo), *m, *n,
        A, *lda,
        cnt_nan,
        cnt_inf );
}

#define magma_tally4f_cnan_inf_gpu FORTRAN_NAME( magma_tally4f_cnan_inf_gpu, MAGMA_tally4F_CNAN_INF_GPU )
void magma_tally4f_cnan_inf_gpu(
    const char* uplo, magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda,
    magma_tally4_int_t *cnt_nan,
    magma_tally4_int_t *cnt_inf )
{
    magma_tally4_cnan_inf_gpu(
        magma_tally4_uplo_const(*uplo), *m, *n,
        magma_tally4_cdevptr(dA), *ldda,
        cnt_nan,
        cnt_inf );
}

#define magma_tally4f_cprint FORTRAN_NAME( magma_tally4f_cprint, MAGMA_tally4F_CPRINT )
void magma_tally4f_cprint(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    const magma_tally4FloatComplex *A, magma_tally4_int_t *lda )
{
    magma_tally4_cprint(
        *m, *n,
        A, *lda );
}

#define magma_tally4f_cprint_gpu FORTRAN_NAME( magma_tally4f_cprint_gpu, MAGMA_tally4F_CPRINT_GPU )
void magma_tally4f_cprint_gpu(
    magma_tally4_int_t *m, magma_tally4_int_t *n,
    devptr_t *dA, magma_tally4_int_t *ldda )
{
    magma_tally4_cprint_gpu(
        *m, *n,
        magma_tally4_cdevptr(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
